(this.webpackJsonpmeliora=this.webpackJsonpmeliora||[]).push([[0],{101:function(n,e,t){},102:function(n,e,t){},103:function(n,e,t){},104:function(n,e,t){},106:function(n,e,t){"use strict";t.r(e);var a=t(4),s=t.n(a),i=t(66),r=t.n(i),o=(t(77),t(17)),c=s.a.createContext(null),u=t(47),l=t.n(u),p=(t(59),t.p+"static/media/logo.bdf03968.png"),d=t.p+"static/media/twitter.c561cadd.png",m=(t.p,t.p+"static/media/instagram.9ffb2f16.png"),y=t.p+"static/media/discord.667df059.png",b=(t(78),t(5));/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&console.log("Mobile device detected");var f=function(){var n=Object(a.useContext)(c),e=(n.user_address,n.setAddress_Context,Object(a.useContext)(c)),t=(e.user_token_ID,e.setTokenID_Context,Object(a.useContext)(c)),s=(t.user_balance,t.setBalance_Context,Object(a.useContext)(c)),i=(s.user_metadata,s.setMetadata_Context,Object(a.useContext)(c));i.user_avatar_URI,i.setAvatarURI_Context;function r(n){document.getElementById(n.target.id).style.transform="scale(1.20)"}function o(n){document.getElementById(n.target.id).style.transform="scale(1.0)"}return Object(a.useEffect)((function(){l.a.init({duration:2e3})}),[]),Object(b.jsx)("div",{className:"navbar",children:Object(b.jsxs)("div",{className:"navbarContainer SlideRightAnimation",children:[Object(b.jsx)("div",{className:"navbarLeft",children:Object(b.jsx)("div",{id:"navbarLogo",className:"navbarLogo",children:Object(b.jsx)("a",{href:window.location.origin,children:Object(b.jsx)("img",{"data-aos":"fade-down-right",className:"navbarLogoImage",id:"navbarLogoImage",src:p,alt:"Home",onMouseOver:r,onMouseLeave:o})})})}),Object(b.jsx)("div",{className:"navbarRight",children:Object(b.jsx)("div",{className:"navbarSocialsContainer",children:Object(b.jsxs)("div",{className:"navbarIconContainer",children:[Object(b.jsx)("a",{href:"https://www.instagram.com/melioraapp/",target:"_blank",children:Object(b.jsx)("img",{"data-aos":"fade-down-left",src:m,onMouseOver:r,onMouseLeave:o,id:"instagramIcon",className:"navbarIcon instagramIcon",alt:"@MelioraFun"})}),Object(b.jsx)("a",{href:"https://nofunz.one/discord/",target:"_blank",children:Object(b.jsx)("img",{"data-aos":"fade-down",src:y,onMouseOver:r,onMouseLeave:o,id:"discordIcon",className:"navbarIcon discordIcon",alt:"Join Discord"})}),Object(b.jsx)("a",{href:"https://twitter.com/melioraFun",target:"_blank",children:Object(b.jsx)("img",{"data-aos":"fade-down-right",src:d,onMouseOver:r,onMouseLeave:o,id:"twitterIcon",className:"navbarIcon twitterIcon",alt:"@MelioraFun"})})]})})})]})})},g=t.p+"static/media/background1.e41ba16e.png",x=(t(80),function(){return window.addEventListener("scroll",(function(){var n=document.querySelector(".background1Container"),e=window.scrollY;n.style.transform="translateY("+.7*e+"px)"})),Object(b.jsx)("div",{className:"background1Container",children:Object(b.jsx)("img",{src:g,alt:"",className:"background1"})})}),j=t.p+"static/media/banner-home.4e8ed300.png",h=(t(81),function(){return Object(b.jsx)("div",{className:"bannerContainer",children:Object(b.jsx)("div",{className:"banner",children:Object(b.jsx)("img",{"data-aos":"fade-left",src:j,alt:"",className:"banner"})})})}),_=t.p+"static/media/meliora_comic_cover.93408526.png",k=t.p+"static/media/meliora_comic_description.0b8fa835.png",T=(t.p,t.p,t.p+"static/media/sign_up_button.00fe9212.png"),v=(t(82),function(){return Object(b.jsxs)("div",{className:"comics",children:[Object(b.jsx)("div",{className:"comicsLeftContainer",children:Object(b.jsx)("div",{className:"comicsLeftTop",children:Object(b.jsx)("div",{className:"comicsImageContainer",children:Object(b.jsx)("img",{"data-aos":"fade-right",src:_,alt:"",id:"comicCoverImage",className:"comicsImage comicCoverImage"})})})}),Object(b.jsx)("div",{className:"comicsRightContainer",children:Object(b.jsxs)("div",{className:"comicsRightTop",children:[Object(b.jsx)("div",{className:"comicsImageContainer",children:Object(b.jsx)("img",{"data-aos":"fade-left",src:k,alt:"",id:"comicDescriptionImage",className:"comicsImage comicDescriptionImage"})}),Object(b.jsx)("div",{className:"comicsButtonsContainer",children:Object(b.jsx)("a",{href:"https://nofunz.one/signup",target:"_blank",children:Object(b.jsx)("img",{"data-aos":"fade-left",src:T,alt:"",onMouseOver:function(n){document.getElementById(n.target.id).style.transform="scale(1.10)"},onMouseLeave:function(n){document.getElementById(n.target.id).style.transform="scale(1.0)"},id:"signUpButton",className:"comicsButton signUpButton"})})})]})})]})}),O=t.p+"static/media/universe-image.8a76d6be.png",w=(t(83),function(){return Object(b.jsx)("div",{className:"universeContainer",children:Object(b.jsx)("div",{className:"universe",children:Object(b.jsx)("img",{"data-aos":"fade-left",src:O,alt:"",className:"universe"})})})}),I=t.p+"static/media/guardians-image.9723b1bc.png",N=(t(84),function(){return Object(b.jsx)("div",{className:"guardiansContainer",children:Object(b.jsx)("div",{className:"guardians",children:Object(b.jsx)("img",{"data-aos":"fade-left",src:I,alt:"",className:"universe"})})})}),M=t.p+"static/media/partners-image.e21e9a12.png",C=(t(85),function(){return Object(b.jsx)("div",{className:"partnersContainer",children:Object(b.jsx)("div",{className:"partners",children:Object(b.jsx)("img",{"data-aos":"fade-left",src:M,alt:"",className:"partners"})})})}),L=(t(86),function(){return Object(b.jsx)(b.Fragment,{})}),S=(t(87),function(){return Object(b.jsxs)("div",{className:"main",children:[Object(b.jsx)(h,{}),Object(b.jsx)(v,{}),Object(b.jsx)(w,{}),Object(b.jsx)(N,{}),Object(b.jsx)(C,{}),Object(b.jsx)(L,{})]})}),P=(t(88),function(){return Object(b.jsxs)("div",{className:"footer",children:[Object(b.jsx)("div",{className:"footerContainer",children:Object(b.jsx)("div",{className:"footerTextContainer",children:Object(b.jsx)("marquee",{children:"Pop quiz, hot shot! What's the first blockchain ever created? (hint: it's not bitcoin) . . . . . . . . . . . . . . . . . . . . Did you know? Over 99% of NFT data is not stored on a blockchain! . . . . . . . . . . . . . . . . . . . .  Pop quiz, hot shot! What's the first country to recognize $BTC as a national currency? (hint: it's not El Salvador) . . . . . . . . . . . . . . . . . . . . Did you know? Ordinals allow for the Bitcoin blockchain to run ANY code, including AI models like ChatGPT, OS's like Windows 11, iOS, PS5 and beyond . . . . . . . . . . . . . . . . . . . . Pop quiz, hot shot! What's the first blockchain ever created? (hint: it's not bitcoin) . . . . . . . . . . . . . . . . . . . . Did you know? Over 99% of NFT data is not stored on a blockchain! . . . . . . . . . . . . . . . . . . . .  Pop quiz, hot shot! What's the first country to recognize $BTC as a national currency? (hint: it's not El Salvador) . . . . . . . . . . . . . . . . . . . . Did you know? Ordinals allow for the Bitcoin blockchain to run ANY code, including AI models like ChatGPT, OS's like Windows 11, iOS, PS5 and beyond . . . . . . . . . . . . . . . . . . . ."})})}),Object(b.jsxs)("div",{className:"creatorAttributionContainer",children:[Object(b.jsx)("div",{className:"creatorAttributionText",children:"Site created by "}),Object(b.jsx)("a",{className:"creatorAttributionLink",href:"https://twitter.com/EvanOnEarth_eth",children:"@EvanOnEarth_eth"})]})]})}),B=t(1),D=t(13),U=t(24),A=t(108),E=t(26),R=t(105).ethers,F=!1,G="Signatures",H={default:{},Signatures:{Address:{mainnet:"",goerli:"0x22d95fff7bb4e88bf1651daea74e36896919dbc0",sepolia:"0x1Fd69E3941030940f58e537B15bea96F5e766291"},ABI:'[{\n                                    "inputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "constructor"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": true,\n                                        "internalType": "address",\n                                        "name": "owner",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "indexed": true,\n                                        "internalType": "address",\n                                        "name": "approved",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "indexed": true,\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "Approval",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": true,\n                                        "internalType": "address",\n                                        "name": "owner",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "indexed": true,\n                                        "internalType": "address",\n                                        "name": "operator",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "bool",\n                                        "name": "approved",\n                                        "type": "bool"\n                                      }\n                                    ],\n                                    "name": "ApprovalForAll",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint256",\n                                        "name": "_fromTokenId",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint256",\n                                        "name": "_toTokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "BatchMetadataUpdate",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint256",\n                                        "name": "_tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "MetadataUpdate",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": true,\n                                        "internalType": "address",\n                                        "name": "previousOwner",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "indexed": true,\n                                        "internalType": "address",\n                                        "name": "newOwner",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "OwnershipTransferred",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint256",\n                                        "name": "token_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "address",\n                                        "name": "user_address",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "PrimaryTokenAssigned",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint256",\n                                        "name": "task_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "string",\n                                        "name": "task_tags",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "bytes32",\n                                        "name": "task_hash",\n                                        "type": "bytes32"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint256",\n                                        "name": "task_timestamp",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "address",\n                                        "name": "completer_address",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "TaskCompleted",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint256",\n                                        "name": "task_count",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint256",\n                                        "name": "task_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "string",\n                                        "name": "task_tags",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "string",\n                                        "name": "task_metadata_URI",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "bytes32",\n                                        "name": "task_hash",\n                                        "type": "bytes32"\n                                      }\n                                    ],\n                                    "name": "TaskCreated",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": true,\n                                        "internalType": "address",\n                                        "name": "from",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "indexed": true,\n                                        "internalType": "address",\n                                        "name": "to",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "indexed": true,\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "Transfer",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "anonymous": false,\n                                    "inputs": [\n                                      {\n                                        "indexed": false,\n                                        "internalType": "address",\n                                        "name": "user_address",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "indexed": false,\n                                        "internalType": "uint16",\n                                        "name": "whitelist_tier",\n                                        "type": "uint16"\n                                      }\n                                    ],\n                                    "name": "WhitelistAssigned",\n                                    "type": "event"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "task_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "string",\n                                        "name": "task_tags",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "internalType": "string",\n                                        "name": "task_metadata_URI",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "name": "__createTask",\n                                    "outputs": [\n                                      {\n                                        "internalType": "bytes32",\n                                        "name": "task_hash",\n                                        "type": "bytes32"\n                                      }\n                                    ],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "token_URI",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "name": "__mintFree",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "token_ID",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "new_collectionInfoURI",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "name": "__setContractURI",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "old_collectionInfoURI",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "new_max_supply",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "__setMaxSupply",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "old_max_supply",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "new_price",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "uint16",\n                                        "name": "whitelist_tier",\n                                        "type": "uint16"\n                                      }\n                                    ],\n                                    "name": "__setMintPrice",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "old_price",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "token_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "address",\n                                        "name": "user_address",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "__setPrimaryTokenID",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "token_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "string",\n                                        "name": "token_URI",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "name": "__setTokenURI",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "old_token_URI",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "_maxSupply",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "to",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "approve",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "owner",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "balanceOf",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "characters",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "metadata_URI",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "tasks_completed",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "collectionInfoURI",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "task_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "string",\n                                        "name": "task_tags",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "name": "completeTask",\n                                    "outputs": [\n                                      {\n                                        "internalType": "bytes32",\n                                        "name": "task_hash",\n                                        "type": "bytes32"\n                                      }\n                                    ],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "contractURI",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "getApproved",\n                                    "outputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "token_ID",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "getCharacter",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "uint256[]",\n                                        "name": "",\n                                        "type": "uint256[]"\n                                      },\n                                      {\n                                        "internalType": "string[]",\n                                        "name": "",\n                                        "type": "string[]"\n                                      },\n                                      {\n                                        "internalType": "bytes32[]",\n                                        "name": "",\n                                        "type": "bytes32[]"\n                                      },\n                                      {\n                                        "internalType": "uint256[]",\n                                        "name": "",\n                                        "type": "uint256[]"\n                                      },\n                                      {\n                                        "internalType": "address[]",\n                                        "name": "",\n                                        "type": "address[]"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "getMaxSupply",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint16",\n                                        "name": "whitelist_tier",\n                                        "type": "uint16"\n                                      }\n                                    ],\n                                    "name": "getMintPrice",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "index",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "getPrimaryHolderByIndex",\n                                    "outputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "getPrimaryHolderCount",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "user_address",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "getPrimaryTokenID",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "token_ID",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "user_address",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "getPrimaryTokenURI",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "_tokenURI",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "task_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "string",\n                                        "name": "task_tags",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "name": "getTask",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "internalType": "bytes32",\n                                        "name": "",\n                                        "type": "bytes32"\n                                      },\n                                      {\n                                        "internalType": "address[]",\n                                        "name": "",\n                                        "type": "address[]"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "address",\n                                        "name": "",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "task_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "string",\n                                        "name": "task_tags",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "name": "getTaskHash",\n                                    "outputs": [\n                                      {\n                                        "internalType": "bytes32",\n                                        "name": "task_hash",\n                                        "type": "bytes32"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "user_address",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "getWhitelistTier",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint16",\n                                        "name": "",\n                                        "type": "uint16"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "holderPrimaryTokens",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "owner",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "address",\n                                        "name": "operator",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "isApprovedForAll",\n                                    "outputs": [\n                                      {\n                                        "internalType": "bool",\n                                        "name": "",\n                                        "type": "bool"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "token_URI",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "name": "mint",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "token_ID",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "payable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint16",\n                                        "name": "",\n                                        "type": "uint16"\n                                      }\n                                    ],\n                                    "name": "mint_limits",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint16",\n                                        "name": "",\n                                        "type": "uint16"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint16",\n                                        "name": "",\n                                        "type": "uint16"\n                                      }\n                                    ],\n                                    "name": "mint_prices",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "name",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "owner",\n                                    "outputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "ownerOf",\n                                    "outputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "primaryTokenHolderIndex",\n                                    "outputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "renounceOwnership",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "from",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "address",\n                                        "name": "to",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "safeTransferFrom",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "from",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "address",\n                                        "name": "to",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "bytes",\n                                        "name": "data",\n                                        "type": "bytes"\n                                      }\n                                    ],\n                                    "name": "safeTransferFrom",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "operator",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "bool",\n                                        "name": "approved",\n                                        "type": "bool"\n                                      }\n                                    ],\n                                    "name": "setApprovalForAll",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "token_ID",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "setPrimaryTokenID",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "bytes4",\n                                        "name": "interfaceId",\n                                        "type": "bytes4"\n                                      }\n                                    ],\n                                    "name": "supportsInterface",\n                                    "outputs": [\n                                      {\n                                        "internalType": "bool",\n                                        "name": "",\n                                        "type": "bool"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [],\n                                    "name": "symbol",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "bytes32",\n                                        "name": "",\n                                        "type": "bytes32"\n                                      }\n                                    ],\n                                    "name": "taskHashArray",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "tasks",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "metadata_URI",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "task_ID",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "string",\n                                        "name": "task_tags",\n                                        "type": "string"\n                                      },\n                                      {\n                                        "internalType": "bytes32",\n                                        "name": "task_hash",\n                                        "type": "bytes32"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "task_creation_timestamp",\n                                        "type": "uint256"\n                                      },\n                                      {\n                                        "internalType": "address",\n                                        "name": "task_creator_address",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "tokenURI",\n                                    "outputs": [\n                                      {\n                                        "internalType": "string",\n                                        "name": "",\n                                        "type": "string"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "from",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "address",\n                                        "name": "to",\n                                        "type": "address"\n                                      },\n                                      {\n                                        "internalType": "uint256",\n                                        "name": "tokenId",\n                                        "type": "uint256"\n                                      }\n                                    ],\n                                    "name": "transferFrom",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "newOwner",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "transferOwnership",\n                                    "outputs": [],\n                                    "stateMutability": "nonpayable",\n                                    "type": "function"\n                                  },\n                                  {\n                                    "inputs": [\n                                      {\n                                        "internalType": "address",\n                                        "name": "",\n                                        "type": "address"\n                                      }\n                                    ],\n                                    "name": "whitelist_tiers",\n                                    "outputs": [\n                                      {\n                                        "internalType": "uint16",\n                                        "name": "",\n                                        "type": "uint16"\n                                      }\n                                    ],\n                                    "stateMutability": "view",\n                                    "type": "function"\n                                  }]',Functions:{mint:{number_of_inputs:1},__mintFree:{number_of_inputs:1},contractURI:{number_of_inputs:0},__setContractURI:{number_of_inputs:1},getMintPrice:{number_of_inputs:0},__setMintPrice:{number_of_inputs:1},getMaxSupply:{number_of_inputs:0},__setMaxSupply:{number_of_inputs:1},tokenURI:{number_of_inputs:1},__setTokenURI:{number_of_inputs:2},lockToken:{number_of_inputs:2},__lockToken:{number_of_inputs:2},unlockToken:{number_of_inputs:1},__unlockToken:{number_of_inputs:1},getTimeLocked:{number_of_inputs:1},getLocked:{number_of_inputs:1},getPrimaryTokenID:{number_of_inputs:1},setPrimaryTokenID:{number_of_inputs:2},getPrimaryTokenURI:{number_of_inputs:1},getPrimaryHolderByIndex:{number_of_inputs:1},getPrimaryHolderCount:{number_of_inputs:0},__createTask:{number_of_inputs:3},getTaskHash:{number_of_inputs:2},getTask:{number_of_inputs:2},getCharacter:{number_of_inputs:1},completeTask:{number_of_inputs:2},completeTaskBatch:{number_of_inputs:2},setApprovalForAll:{number_of_inputs:2}}},LMNTL:{Address:{mainnet:"",goerli:"0xA70CB9f3768D9AEdF7390Fed92770dCDdE1D0C1D",hyperspace:"0xB4fECac2F5BdEc2eD15547cF857464c8691b9849"},ABI:"[]",Functions:{mint:{number_of_inputs:1}}}};H.default=H[G];var z,q,W,J,Y,Q={NFT_Storage:"bafybeiglxxim4fc4jxl53kxoxjsnrf7efcabx4jikrgrz2ralmgqlj6yai",Pinata:"QmcvaEQrzwiNjDZzJX1jBq5zDtvF9yc2Le6nyjquABEGmh",Pinata_old:"QmPF4nrDbTnGk2UWduZDw2FCHZcF6HJicYDdsDAkEqJgH7"},Z={NFT_Storage:{0:"/LMNTLfire1.json",1:"/LMNTLwater1.json",2:"/LMNTLair1.json",3:"/LMNTLearth1.json",4:"/LMNTLfire2.json",5:"/LMNTLwater2.json",6:"/LMNTLair2.json",7:"/LMNTLearth2.json",background_list:"bafybeicc2gguyju7625a3c6ie2gyukggwhgcle64a73bo4yxrtrr6zf2fi/background_list.json",pac_list:"bafybeigmgu2k25bxwjmwxwrr2kwiwzzjpuy3mzew2yochngedqof5zgmu4/pac_list.json"},Pinata:{0:"/LMNTLfire1.json",1:"/LMNTLwater1.json",2:"/LMNTLair1.json",3:"/LMNTLearth1.json",4:"/LMNTLfire2.json",5:"/LMNTLwater2.json",6:"/LMNTLair2.json",7:"/LMNTLearth2.json"},Pinata_old:{0:"/LMNTLfire1.png",1:"/LMNTLwater1.png",2:"/LMNTLair1.png",3:"/LMNTLearth1.png",4:"/LMNTLfire2.png",5:"/LMNTLwater2.png",6:"/LMNTLair2.png",7:"/LMNTLearth2.png"}},$={mainnet:"Pinata",goerli:"NFT_Storage",hyperspace:"NFT_Storage",sepolia:"NFT_Storage"},V={Pinata:"https://gateway.pinata.cloud/ipfs/",Pinata_old:"https://gateway.pinata.cloud/ipfs/",Infura:"",NFT_Storage:"https://nftstorage.link/ipfs/"},X=8,K="sepolia";function nn(n){return new Promise((function(e){return setTimeout(e,n)}))}function en(){return(en=Object(D.a)(Object(B.a)().mark((function n(){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!F){n.next=8;break}return F=!1,n.next=4,jn();case 4:return n.next=6,_n(H.Signatures.ABI);case 6:H.Signatures.Functions=n.sent,console.log("Functions:",H.Signatures.Functions);case 8:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function tn(){return an.apply(this,arguments)}function an(){return(an=Object(D.a)(Object(B.a)().mark((function n(){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return W=new R.providers.Web3Provider(window.ethereum),console.log("Provider: ",W),Y=W.connection.url,console.log("Web Wallet: ",Y),"_network"in W&&(K=W._network.name,console.log("Network: ",K)),n.abrupt("return",W);case 7:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function sn(n){return rn.apply(this,arguments)}function rn(){return(rn=Object(D.a)(Object(B.a)().mark((function n(e){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(e||(e=W),e){n.next=6;break}return n.next=5,tn();case 5:e=n.sent;case 6:return n.next=9,e.send("eth_requestAccounts",[]);case 9:return n.next=11,e.getSigner();case 11:return J=n.sent,console.log("Signer: ",J),n.abrupt("return",J);case 14:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function on(n){return cn.apply(this,arguments)}function cn(){return(cn=Object(D.a)(Object(B.a)().mark((function n(e){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(e||(e=J),e){n.next=6;break}return n.next=5,sn();case 5:e=n.sent;case 6:return n.next=9,e.getAddress();case 9:return z=n.sent,console.log("Address: ",z),n.abrupt("return",z);case 12:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function un(n){return ln.apply(this,arguments)}function ln(){return(ln=Object(D.a)(Object(B.a)().mark((function n(e){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(e||(e=J),e){n.next=6;break}return n.next=5,sn();case 5:e=n.sent;case 6:return n.next=9,e.getBalance();case 9:return q=n.sent,q=R.utils.formatEther(q),console.log("Balance: ",q),n.abrupt("return",q);case 13:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function pn(n){return dn.apply(this,arguments)}function dn(){return(dn=Object(D.a)(Object(B.a)().mark((function n(e){var t,a;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return K||(K=mn()),a=$[K],t=Z[a][e]?V[a]+Q[a]+Z[a][e]:V[a]+e,n.abrupt("return",t);case 5:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function mn(){return yn.apply(this,arguments)}function yn(){return(yn=Object(D.a)(Object(B.a)().mark((function n(){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(K){n.next=6;break}return n.next=3,tn();case 3:"_network"in(W=n.sent)&&(K=W._network.name);case 6:return console.log("Network Name: ",K),n.abrupt("return",K);case 9:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function bn(n){return fn.apply(this,arguments)}function fn(){return(fn=Object(D.a)(Object(B.a)().mark((function n(e){var t,a,s;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(console.log("\nSmartContractOperator >>> RUNNING getJSONfromIPFS()"),!e){n.next=15;break}return console.log("metadata_URI_input:",e),t=e.includes("http")?e:pn(e),n.next=7,fetch(t);case 7:return a=n.sent,n.next=10,a.json();case 10:return s=n.sent,console.log("JSON Contents: ",s),n.abrupt("return",s);case 15:console.log("No metadata URI input!");case 16:case 17:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function gn(n){return xn.apply(this,arguments)}function xn(){return(xn=Object(D.a)(Object(B.a)().mark((function n(e){var t;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(t=!1,"polygon"!==e&&"matic"!==e){n.next=7;break}return n.next=4,window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x89"}]});case 4:t=!0,n.next=11;break;case 7:if("goerli"!==e){n.next=11;break}return n.next=10,window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x5"}]});case 10:t=!0;case 11:t&&(K=e,t=!1,window.location.reload());case 12:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function jn(n){return hn.apply(this,arguments)}function hn(){return(hn=Object(D.a)(Object(B.a)().mark((function n(e){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,tn();case 2:return W=n.sent,n.next=5,sn(W);case 5:return J=n.sent,n.next=8,on(J);case 8:return z=n.sent,n.next=11,un(J);case 11:return q=n.sent,"_network"in W&&(K=W._network.name,console.log("Network: ",K)),e&&K!==e&&(console.log("PROMPTED Network Switch to: ",e),gn(e)),n.abrupt("return",{address:z,network_name:K,balance:q});case 17:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function _n(n){return kn.apply(this,arguments)}function kn(){return(kn=Object(D.a)(Object(B.a)().mark((function n(e){var t,a,s,i,r;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:t={},a=Object(U.a)(e);try{for(a.s();!(s=a.n()).done;)"function"===(i=s.value).type&&(r=i.inputs.map((function(n){return n.name})),t[i.name]=r)}catch(o){a.e(o)}finally{a.f()}return n.abrupt("return",t);case 4:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function Tn(n,e){return vn.apply(this,arguments)}function vn(){return vn=Object(D.a)(Object(B.a)().mark((function n(e,t){var a,s,i,r,o,c,u,l,p,d,m=arguments;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(a=m.length>2&&void 0!==m[2]?m[2]:[],s=m.length>3&&void 0!==m[3]&&m[3],console.log("Contract Name: ",e),console.log("Function Name: ",t),console.log("Function Params: ",a),console.log("Mint Button: ",s),H[e]?(i=H[e].Address[K],e):(i=e,""),console.log("Contract Address:",i),J){n.next=13;break}return n.next=12,sn();case 12:J=n.sent;case 13:if(console.log("address",J._address),(r=new A.b(H[e].ABI)).format(E.d.full),o=new R.Contract(i,r,J),"mint"!==t){n.next=25;break}return n.next=21,o.mint(a[0],{value:R.utils.parseUnits(".000000000000005","ether")});case 21:c=n.sent,!0,n.next=156;break;case 25:if("__mintFree"!==t){n.next=32;break}return n.next=28,o.__mintFree(a[0]);case 28:c=n.sent,!0,n.next=156;break;case 32:if("contractURI"!==t){n.next=38;break}return n.next=35,o.contractURI();case 35:c=n.sent,n.next=156;break;case 38:if("__setContractURI"!==t){n.next=44;break}return n.next=41,o.__setContractURI(a[0]);case 41:c=n.sent,n.next=156;break;case 44:if("getMintPrice"!==t){n.next=50;break}return n.next=47,o.getMintPrice(a[0]);case 47:c=n.sent,n.next=156;break;case 50:if("__setMintPrice"!==t){n.next=56;break}return n.next=53,o.__setMintPrice(a[0],a[1]);case 53:c=n.sent,n.next=156;break;case 56:if("getMaxSupply"!==t){n.next=62;break}return n.next=59,o.getMaxSupply();case 59:c=n.sent,n.next=156;break;case 62:if("__setMaxSupply"!==t){n.next=68;break}return n.next=65,o.__setMaxSupply(a[0]);case 65:c=n.sent,n.next=156;break;case 68:if("tokenURI"!==t){n.next=74;break}return n.next=71,o.tokenURI(a[0]);case 71:c=n.sent,n.next=156;break;case 74:if("__setTokenURI"!==t){n.next=80;break}return n.next=77,o.__setTokenURI(a[0],a[1]);case 77:c=n.sent,n.next=156;break;case 80:if("getPrimaryTokenID"!==t){n.next=86;break}return n.next=83,o.getPrimaryTokenID(a[0]);case 83:c=n.sent,n.next=156;break;case 86:if("setPrimaryTokenID"!==t){n.next=92;break}return n.next=89,o.setPrimaryTokenID(a[0]);case 89:c=n.sent,n.next=156;break;case 92:if("getPrimaryTokenURI"!==t){n.next=98;break}return n.next=95,o.getPrimaryTokenURI(a[0]);case 95:c=n.sent,n.next=156;break;case 98:if("getPrimaryHolderByIndex"!==t){n.next=104;break}return n.next=101,o.getPrimaryHolderByIndex(a[0]);case 101:c=n.sent,n.next=156;break;case 104:if("getPrimaryHolderCount"!==t){n.next=110;break}return n.next=107,o.getPrimaryHolderCount();case 107:c=n.sent,n.next=156;break;case 110:if("getAllPrimaryHolders"!==t){n.next=116;break}return n.next=113,o.getAllPrimaryHolders();case 113:c=n.sent,n.next=156;break;case 116:if("__createTask"!==t){n.next=122;break}return n.next=119,o.__createTask(a[0],a[1],a[2]);case 119:c=n.sent,n.next=156;break;case 122:if("getTaskHash"!==t){n.next=128;break}return n.next=125,o.getTaskHash(a[0],a[1]);case 125:c=n.sent,n.next=156;break;case 128:if("getTask"!==t){n.next=134;break}return n.next=131,o.getTask(a[0],a[1]);case 131:c=n.sent,n.next=156;break;case 134:if("getCharacter"!==t){n.next=140;break}return n.next=137,o.getCharacter(a[0]);case 137:c=n.sent,n.next=156;break;case 140:if("completeTask"!==t){n.next=146;break}return n.next=143,o.completeTask(a[0],a[1]);case 143:c=n.sent,n.next=156;break;case 146:if("completeTaskBatch"!==t){n.next=152;break}return n.next=149,o.completeTaskBatch(a[0],a[1]);case 149:c=n.sent,n.next=156;break;case 152:if("setApprovalForAll"!==t){n.next=156;break}return n.next=155,o.setApprovalForAll(a[0],a[1]);case 155:c=n.sent;case 156:if(console.log("Transaction info: ",c),u=c.hash,console.log("Transaction hash: ",u),!u){n.next=189;break}return n.next=163,W.getTransactionReceipt(u);case 163:if(l=n.sent,console.log("Immediate transaction receipt: ",l),!s){n.next=189;break}s.textContent="Executing",p=1;case 168:if(l){n.next=178;break}return n.next=171,nn(500);case 171:return p>3?(s.textContent="Executing",p=0):s.insertAdjacentText("beforeEnd","."),n.next=174,W.getTransactionReceipt(u);case 174:l=n.sent,p+=1,n.next=168;break;case 178:console.log("Mined transaction receipt: ",l),d=0;case 180:if(!(d<2*X)){n.next=188;break}return n.next=183,nn(500);case 183:p>3?(s.textContent="Executing",p=0):s.insertAdjacentText("beforeEnd","."),p+=1,d+=1,n.next=180;break;case 188:s.textContent="Executed!";case 189:return console.log("Transaction Info: ",c),n.abrupt("return",c);case 191:case"end":return n.stop()}}),n)}))),vn.apply(this,arguments)}F&&function(){en.apply(this,arguments)}();t.p,t.p,t.p;var On,wn,In,Nn,Mn,Cn,Ln,Sn=t.p+"static/media/click_to_open_button.956bad6b.png",Pn=(t(101),!1),Bn={},Dn=[],Un="Meliora",An="The Birth of Meliora",En=0,Rn=_;/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&console.log("Mobile device detected");var Fn=!1;window.screen.width<window.screen.height&&(console.log("Vertical screen detected"),Fn=!0,console.log("window.screen.width: ",window.screen.width),console.log("window.screen.height: ",window.screen.height));var Gn=function(){var n=Object(a.useContext)(c),e=(n.user_address,n.setAddress_Context,Object(a.useContext)(c)),t=(e.user_token_ID,e.setTokenID_Context,Object(a.useContext)(c)),s=(t.user_balance,t.setBalance_Context,Object(a.useContext)(c)),i=(s.user_metadata,s.setMetadata_Context,Object(a.useContext)(c));i.user_avatar_URI,i.setAvatarURI_Context;Object(a.useEffect)((function(){l.a.init({duration:2e3})}),[]);document.getElementById("openComicButton");var r=document.getElementById("backgroundImage"),o=document.getElementById("element_1"),u=document.getElementById("element_2"),p=document.getElementById("element_3");function d(){return m.apply(this,arguments)}function m(){return(m=Object(D.a)(Object(B.a)().mark((function n(){var e,t;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return e=new Date,t=e.toLocaleString(),n.abrupt("return",t);case 3:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function y(){return(y=Object(D.a)(Object(B.a)().mark((function n(){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:console.log("\nGameGUI >>> RUNNING onLoad()");case 1:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function f(){return g.apply(this,arguments)}function g(){return(g=Object(D.a)(Object(B.a)().mark((function n(){var e;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(console.log("\nGameGUI >>> RUNNING loadGame()"),Pn){n.next=19;break}return n.next=4,jn("sepolia");case 4:return n.sent,n.next=7,h("none");case 7:return n.next=9,Tn("Signatures","getTask",[1008,"world: "+Un+", game: "+An]);case 9:return e=n.sent,n.next=12,bn(e[0]);case 12:return Bn=n.sent,console.log("Scene Dict:",Bn),Pn=!0,document.getElementById("openComicButton").style.display="none",n.next=19,v(1);case 19:case 20:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function x(n){return j.apply(this,arguments)}function j(){return(j=Object(D.a)(Object(B.a)().mark((function n(e){var t,a;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t=e.target.id.split("element_")[1],n.next=3,h(t);case 3:return a=Bn.scenes[En.toString()].elements[t.toString()].linked_scene,n.next=6,v(a);case 6:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function h(){return _.apply(this,arguments)}function _(){return _=Object(D.a)(Object(B.a)().mark((function n(){var e,t,a,s,i,r,o=arguments;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return e=o.length>0&&void 0!==o[0]?o[0]:"",t=o.length>1&&void 0!==o[1]?o[1]:"",a=o.length>2&&void 0!==o[2]?o[2]:0,s=o.length>3?o[3]:void 0,i=o.length>4?o[4]:void 0,console.log("\nGameGUI >>> RUNNING updatePlayerLedger()"),e||(e=Un),t||(t=An),a||(a=En),i||(On=d(),i=On),r={world:e,game:t,scene:a,element:s,time:i},Dn.push(r),n.abrupt("return",r);case 17:case"end":return n.stop()}}),n)}))),_.apply(this,arguments)}function k(n,e){return T.apply(this,arguments)}function T(){return(T=Object(D.a)(Object(B.a)().mark((function n(e,t){return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:console.log("\nGameGUI >>> RUNNING updateElementCoordinates()"),console.log("Coordinates Input: ",t),e.style.left=t[0].toString()+"%",e.style.bottom=t[1].toString()+"%";case 4:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function v(){return O.apply(this,arguments)}function O(){return O=Object(D.a)(Object(B.a)().mark((function n(){var e,t=arguments;return Object(B.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(e=t.length>0&&void 0!==t[0]&&t[0],console.log("\nGameGUI >>> RUNNING changeScene()"),console.log("Scene # Input:",e),e||0===e||(e=En+=1),En=e,console.log("New current_scene #:",En),Rn=Bn.scenes[En.toString()].background,r=document.getElementById("backgroundImage"),console.log(r),r.src=Rn,console.log("New Background:",Rn),o=document.getElementById("element_1"),!Bn.scenes[En.toString()].elements[1]){n.next=22;break}return wn=Bn.scenes[En.toString()].elements[1].uri,o.src=wn,o.style.display="inline",Mn=Bn.scenes[En.toString()].elements[1].coordinates,n.next=20,k(o,Mn);case 20:n.next=23;break;case 22:o.style.display="none";case 23:if(u=document.getElementById("element_2"),!Bn.scenes[En.toString()].elements[2]){n.next=34;break}return In=Bn.scenes[En.toString()].elements[2].uri,u.src=In,u.style.display="inline",Cn=Bn.scenes[En.toString()].elements[2].coordinates,n.next=32,k(u,Cn);case 32:n.next=35;break;case 34:u.style.display="none";case 35:if(p=document.getElementById("element_3"),!Bn.scenes[En.toString()].elements[3]){n.next=46;break}return Nn=Bn.scenes[En.toString()].elements[3].uri,p.src=Nn,p.style.display="inline",Ln=Bn.scenes[En.toString()].elements[3].coordinates,n.next=44,k(p,Ln);case 44:n.next=47;break;case 46:p.style.display="none";case 47:case 48:case"end":return n.stop()}}),n)}))),O.apply(this,arguments)}function w(n){n.target.id.split("element_")[1],document.getElementById(n.target.id);var e=1.2*parseFloat(window.getComputedStyle(n.target).width),t=1.2*parseFloat(window.getComputedStyle(n.target).height);n.target.style.width=e+"px",n.target.style.height=t+"px"}function I(n){n.target.id.split("element_")[1],document.getElementById(n.target.id);var e=1*parseFloat(window.getComputedStyle(n.target).width)/1.2,t=1*parseFloat(window.getComputedStyle(n.target).height)/1.2;n.target.style.width=e+"px",n.target.style.height=t+"px"}return function(){y.apply(this,arguments)}(),Object(b.jsxs)("div",{className:"gameGUI",children:[Object(b.jsx)("div",{className:"gameGUIContainer",style:{},children:Object(b.jsxs)("div",{className:"gameSceneContainer",style:Fn?{width:"100vw",margin:"0% 0% 0% 0%"}:{},children:[Object(b.jsx)("div",{className:"backgroundContainer",children:Object(b.jsx)("img",{onClick:f,src:Rn,alt:"",id:"backgroundImage",className:"backgroundImage"})}),Object(b.jsxs)("div",{className:"gameElementContainer",children:[Object(b.jsx)("img",{src:"",alt:"",id:"rewardAnimation",className:"rewardAnimation",style:{opacity:"0"}}),Object(b.jsx)("img",{onClick:x,onMouseOver:w,onMouseLeave:I,src:wn,alt:"",id:"element_1",className:"gameElement",style:{opacity:"1"}}),Object(b.jsx)("img",{onClick:x,onMouseOver:w,onMouseLeave:I,src:In,alt:"",id:"element_2",className:"gameElement",style:{opacity:"1"}}),Object(b.jsx)("img",{onClick:x,onMouseOver:w,onMouseLeave:I,src:Nn,alt:"",id:"element_3",className:"gameElement",style:{opacity:"1"}})]})]})}),Object(b.jsx)("div",{className:"openComicButtonContainer",id:"openComicButtonContainer",children:Object(b.jsx)("img",{src:Sn,alt:"",onClick:f,id:"openComicButton",className:"openComicButton"})})]})},Hn=(t(102),function(){return Object(b.jsxs)("div",{className:"comicplay",children:[Object(b.jsx)(Gn,{}),Object(b.jsx)(L,{})]})}),zn=(t(103),function(){function n(n){document.getElementById(n.target.id).style.transform="scale(1.20)"}function e(n){document.getElementById(n.target.id).style.transform="scale(1.0)"}return Object(b.jsxs)("div",{className:"mintgui",children:[Object(b.jsx)("div",{className:"mintguiLeftContainer",children:Object(b.jsxs)("div",{className:"mintguiTextContainer",children:[Object(b.jsx)("div",{className:"mintguiText mintguiTitle","data-aos":"fade-right","data-aos-delay":"100",children:"Co-founder at NoFun Labs"}),Object(b.jsx)("div",{className:"mintguiText mintguiTagline","data-aos":"fade-right","data-aos-delay":"200",style:{textDecoration:"none",color:"#00ef63"},children:"- Blockchain Onboarding Solutions -"}),Object(b.jsx)("div",{className:"mintguiText","data-aos":"fade-right","data-aos-delay":"300",style:{textDecoration:"none",color:"#bbbbbb"},children:"Start onboarding your next 1,000,000 users now:"}),Object(b.jsx)("a",{"data-aos":"flip-down","data-aos-delay":"0",href:"https://evanon.earth/nofunlabs",target:"_blank",className:"mintguiText mintguiLink",id:"nofunlabsLink",onMouseOver:n,onMouseLeave:e,style:{textDecoration:"none",color:"#7CE2F9"},children:"evanon.earth/nofunlabs ->"}),Object(b.jsx)("br",{}),Object(b.jsx)("div",{"data-aos":"fade-right","data-aos-delay":"500",className:"mintguiText mintguiTitle",children:"Advisor at BrightID"}),Object(b.jsx)("div",{"data-aos":"fade-right","data-aos-delay":"600",className:"mintguiText mintguiTagline",style:{textDecoration:"none",color:"#ff9500"},children:"- Decentralized Identity Protocol -"}),Object(b.jsx)("div",{"data-aos":"fade-right","data-aos-delay":"700",className:"mintguiText",style:{textDecoration:"none",color:"#bbbbbb"},children:'Your identity, your privacy, all in your custody. No "orb" required:'}),Object(b.jsx)("a",{"data-aos":"flip-down","data-aos-delay":"0",href:"https://evanon.earth/brightid",target:"_blank",className:"mintguiText mintguiLink",id:"brightidLink",onMouseOver:n,onMouseLeave:e,style:{textDecoration:"none",color:"#7CE2F9"},children:"evanon.earth/brightid ->"}),Object(b.jsx)("br",{}),Object(b.jsx)("div",{"data-aos":"fade-right","data-aos-delay":"900",className:"mintguiText mintguiTitle",children:"Advisor at Unitap"}),Object(b.jsx)("div",{"data-aos":"fade-right","data-aos-delay":"1000",className:"mintguiText mintguiTagline",style:{textDecoration:"none",color:"#ea49ff"},children:"- Universal Token Distribution Platform -"}),Object(b.jsx)("div",{"data-aos":"fade-right","data-aos-delay":"1100",className:"mintguiText",style:{textDecoration:"none",color:"#bbbbbb"},children:"Grow your dapp's userbase with free gas and token raffles:"}),Object(b.jsx)("a",{"data-aos":"flip-down","data-aos-delay":"00",href:"https://evanon.earth/unitap",target:"_blank",className:"mintguiText mintguiLink",id:"unitapLink",onMouseOver:n,onMouseLeave:e,style:{textDecoration:"none",color:"#7CE2F9"},children:"evanon.earth/unitap ->"})]})}),Object(b.jsx)("div",{className:"mintguiRightContainer",children:Object(b.jsx)("div",{className:"mintguiRightTop",children:Object(b.jsx)("div",{className:"mintguiImageContainer",children:Object(b.jsx)("img",{"data-aos":"fade-left",src:_,alt:"",className:"mintguiImage"})})})})]})}),qn=(t(104),function(){return Object(b.jsxs)("div",{className:"comicmint",children:[Object(b.jsx)(zn,{}),Object(b.jsx)(L,{})]})}),Wn=t(70),Jn=t(11),Yn=function(){var n=Object(a.useState)(null),e=Object(o.a)(n,2),t=e[0],s=e[1],i=Object(a.useState)(null),r=Object(o.a)(i,2),u=r[0],l=r[1],p=Object(a.useState)(null),d=Object(o.a)(p,2),m=d[0],y=d[1],g=Object(a.useState)(null),j=Object(o.a)(g,2),h=j[0],_=j[1],k=Object(a.useState)(null),T=Object(o.a)(k,2),v=T[0],O=T[1];return Object(b.jsx)(c.Provider,{value:{user_address:t,setAddress_Context:s,user_balance:m,setBalance_Context:y,user_token_ID:u,setTokenID_Context:l,user_metadata:h,setMetadata_Context:_,user_avatar_URI:v,setAvatarURI_Context:O},children:Object(b.jsxs)(Wn.a,{children:[Object(b.jsx)(x,{}),Object(b.jsx)(f,{}),Object(b.jsx)(S,{}),Object(b.jsxs)(Jn.c,{children:[Object(b.jsx)(Jn.a,{exact:!0,path:"/",element:Object(b.jsx)(S,{})}),Object(b.jsx)(Jn.a,{exact:!0,path:"/comics/meliora/volume1/play",element:Object(b.jsx)(Hn,{})}),Object(b.jsx)(Jn.a,{exact:!0,path:"/comics/meliora/volume1/mint",element:Object(b.jsx)(qn,{})})]}),Object(b.jsx)(P,{})]})})};r.a.render(Object(b.jsx)(s.a.StrictMode,{children:Object(b.jsx)(Yn,{})}),document.getElementById("root"))},77:function(n,e,t){},78:function(n,e,t){},80:function(n,e,t){},81:function(n,e,t){},82:function(n,e,t){},83:function(n,e,t){},84:function(n,e,t){},85:function(n,e,t){},86:function(n,e,t){},87:function(n,e,t){},88:function(n,e,t){},90:function(n,e){}},[[106,1,2]]]);
//# sourceMappingURL=main.f5e5053d.chunk.js.map