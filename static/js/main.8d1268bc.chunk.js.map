{"version":3,"sources":["scripts/SmartContractContext.js","image/logo.png","image/icons/twitter.png","image/icons/instagram.png","image/icons/linkedin.png","image/icons/discord.png","components/navbar/Navbar.js","image/background1.png","components/background/Background.js","image/banner-home.png","components/banner/Banner.js","image/meliora_comic_cover.png","image/meliora_comic_description.png","image/sign_up_button.png","image/mint_comic_button.png","image/play_read_button.png","components/comics/Comics.js","image/universe-image.png","components/universe/Universe.js","image/guardians-image.png","components/guardians/Guardians.js","image/partners-image.png","components/partners/Partners.js","components/animation/Animation.js","pages/main/Main.js","components/footer/Footer.js","scripts/SmartContractOperator.js","image/animations/exp/EXP_plus_5.gif","image/animations/exp/EXP_plus_10.gif","image/animations/TAP_plus_3.gif","components/gamegui/GameGUI.js","image/click_to_open_button.png","pages/comicplay/ComicPlay.js","components/mintgui/MintGUI.js","pages/comicmint/ComicMint.js","App.js","index.js"],"names":["SmartContractContext","React","createContext","test","navigator","userAgent","console","log","Navbar","_useContext","useContext","_useContext2","user_address","setAddress_Context","_useContext3","user_token_ID","setTokenID_Context","_useContext4","user_balance","setBalance_Context","_useContext5","user_metadata","setMetadata_Context","user_avatar_URI","setAvatarURI_Context","mouseover","event","document","getElementById","target","id","style","transform","mouseleave","useEffect","Aos","init","duration","_jsx","className","children","_jsxs","href","window","location","src","logo","alt","onMouseOver","onMouseLeave","instagram_icon","discord_icon","twitter_icon","Background","addEventListener","parallax","querySelector","scrollPosition","scrollY","classname","background1","display","Banner","home_banner","Comics","meliora_comic_cover_image","meliora_comic_description_image","sign_up_image","Universe","universe_image","Guardians","guardians_image","Partners","partners_image","Animation","_Fragment","Main","Footer","ethers","require","run_on_load","default_contract_name","contract_dict","provider","signer","user_web_wallet","folder_URIs","NFT_Storage","Pinata","Pinata_old","JSON_URIs","background_list","pac_list","network_IPFS_dict","IPFS_prefixes","Infura","opensea_link_delay","network_name","pause","time","Promise","resolve","setTimeout","_onLoad","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","connectWallet","parseABI","sent","stop","apply","arguments","setProvider","_setProvider","_callee2","_context2","providers","Web3Provider","ethereum","abrupt","setSigner","_x","_setSigner","_callee3","provider_input","_context3","send","getSigner","setUserAddress","_x2","_setUserAddress","_callee4","signer_input","_context4","getAddress","setUserBalance","_x3","_setUserBalance","_callee5","_context5","getBalance","utils","formatEther","getMetadataURI","_x9","_getMetadataURI","_callee9","metadata_info","metadata_URI","IPFS_name","_context9","getNetwork","_getNetwork","_callee11","_context11","getJSONfromIPFS","_x12","_getJSONfromIPFS","_callee12","metadata_URI_input","response","JSON_contents","_context12","includes","fetch","json","promptNetworkSwitch","_x14","_promptNetworkSwitch","_callee14","network_name_input","network_switched","_context14","request","method","params","chainId","reload","_x16","_connectWallet","_callee16","_context16","_x17","_parseABI","_callee17","ABI","functions","_iterator","_step","entry","inputs","_context17","_createForOfIteratorHelper","s","n","done","value","type","map","input","name","err","e","f","runContractFunction","_x18","_x19","_runContractFunction","_callee18","contract_name_input","function_name","function_params","button_text_object","contract_address","iface","contract","transaction_info","transaction_hash","transaction_receipt","loop_count","wait_count","_args18","_context18","length","undefined","_address","Interface","format","FormatTypes","full","Contract","mint","parseUnits","__mintFree","contractURI","__setContractURI","getMintPrice","__setMintPrice","getMaxSupply","__setMaxSupply","tokenURI","__setTokenURI","getPrimaryTokenID","setPrimaryTokenID","getPrimaryTokenURI","getPrimaryHolderByIndex","getPrimaryHolderCount","getAllPrimaryHolders","__createTask","getTaskHash","getTask","getCharacter","completeTask","completeTaskBatch","setApprovalForAll","hash","getTransactionReceipt","textContent","insertAdjacentText","onLoad","current_time","element_1_image","element_2_image","element_3_image","element_1_coordinates","element_2_coordinates","element_3_coordinates","game_loaded","scene_dict","player_leder","current_world","current_game","current_scene","background_image","melioraComicCover","vertical_display","screen","width","height","GameGUI","background","element_1","element_2","element_3","getDateTimeString","_getDateTimeString","date_object","date_time_string","Date","toLocaleString","loadGame","_loadGame","updatePlayerLedger","changeScene","handleElementClick","_handleElementClick","element_ID","new_scene_number","split","toString","_updatePlayerLedger","world","game","scene","new_ledger_entry","_args5","push","updateElementCoordinates","_updateElementCoordinates","_callee6","element","coordinates","_context6","left","bottom","_changeScene","_callee7","_args7","_context7","handleMouseOver","new_width","parseFloat","getComputedStyle","new_height","handleMouseLeave","margin","onClick","opacity","clickToOpen","ComicPlay","MintGUI","textDecoration","color","ComicMint","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","Provider","BrowserRouter","Routes","Route","exact","path","ReactDOM","render","StrictMode"],"mappings":"wPAIeA,EAFcC,IAAMC,cAAc,M,iBCFlC,G,MAAA,IAA0B,kCCA1B,MAA0B,oCCA1B,GCAA,IDAA,IAA0B,uCEA1B,MAA0B,oC,eCoCrC,iEAAiEC,KAAKC,UAAUC,YAClFC,QAAQC,IAAI,0BAOd,IA+FeC,EA/FA,WAEf,IAAAC,EAA2CC,qBAAWV,GACtDW,GADkBF,EAAZG,aAAgCH,EAAlBI,mBACwBH,qBAAWV,IACvDc,GADmBH,EAAbI,cAAiCJ,EAAlBK,mBACsBN,qBAAWV,IACtDiB,GADkBH,EAAZI,aAAgCJ,EAAlBK,mBACyBT,qBAAWV,IACxDoB,GADmBH,EAAbI,cAAkCJ,EAAnBK,oBAC2BZ,qBAAWV,IAAtCoB,EAAfG,gBAAqCH,EAApBI,qBAevB,SAASC,EAAUC,GACHC,SAASC,eAAeF,EAAMG,OAAOC,IAC3CC,MAAMC,UAAY,aAC5B,CAEA,SAASC,EAAWP,GACJC,SAASC,eAAeF,EAAMG,OAAOC,IAC3CC,MAAMC,UAAY,YAC5B,CAQA,OA7BAE,qBAAU,WACRC,IAAIC,KAAK,CAAEC,SAAU,KACvB,GAAG,IA4BDC,cAAA,OAAKC,UAAU,SAAQC,SAyBrBC,eAAA,OAAKF,UAAU,sCAAqCC,SAAA,CAClDF,cAAA,OAAKC,UAAU,aAAYC,SACzBF,cAAA,OAAKR,GAAG,aAAaS,UAAU,aAAYC,SACzCF,cAAA,KAAGI,KAAMC,OAAOC,SAAiB,OAAEJ,SACjCF,cAAA,OAAK,WAAS,kBAAkBC,UAAU,kBAAkBT,GAAG,kBAAkBe,IAAKC,EAAMC,IAAI,OAAOC,YAAavB,EAAWwB,aAAchB,UAInJK,cAAA,OAAKC,UAAU,cAAaC,SAC1BF,cAAA,OAAKC,UAAU,yBAAwBC,SACrCC,eAAA,OAAKF,UAAU,sBAAqBC,SAAA,CAClCF,cAAA,KAAGI,KAAK,wCAAwCb,OAAO,SAAQW,SAC7DF,cAAA,OAAK,WAAS,iBAAiBO,IAAKK,EAAgBF,YAAavB,EAAWwB,aAAchB,EAAYH,GAAG,gBAAgBS,UAAU,2BAA2BQ,IAAI,kBAKpKT,cAAA,KAAGI,KAAK,8BAA8Bb,OAAO,SAAQW,SACnDF,cAAA,OAAK,WAAS,YAAYO,IAAKM,EAAcH,YAAavB,EAAWwB,aAAchB,EAAYH,GAAG,cAAcS,UAAU,yBAAyBQ,IAAI,mBAEzJT,cAAA,KAAGI,KAAK,iCAAiCb,OAAO,SAAQW,SACtDF,cAAA,OAAK,WAAS,kBAAkBO,IAAKO,EAAcJ,YAAavB,EAAWwB,aAAchB,EAAYH,GAAG,cAAcS,UAAU,yBAAyBQ,IAAI,6BAQ3K,ECxIe,MAA0B,wCCsC1BM,G,MA7BI,WAcjB,MAXI,iEAAiElD,KAAKC,UAAUC,aAClFC,QAAQC,IAAI,2BACI,GAGlBoC,OAAOW,iBAAiB,UAAU,WAChC,IAAMC,EAAW5B,SAAS6B,cAAc,yBACpCC,EAAiBd,OAAOe,QAE5BH,EAASxB,MAAMC,UAAY,cAAiC,GAAjByB,EAAuB,KACpE,IAEEhB,eAAA,OAAKkB,UAAU,aAAYnB,SAAA,CACzBF,cAAA,OAAKC,UAAU,uBAAsBC,SACnCF,cAAA,OAAKO,IAAKe,EAAab,IAAI,GAAGR,UAAU,kBAE1CD,cAAA,OAAKC,UAAU,uBAAuBR,MAAO,CAAC8B,QAAS,QAAQrB,SAC7DF,cAAA,OAAKO,IAAKe,EAAab,IAAI,GAAGR,UAAU,kBAE1CD,cAAA,OAAKC,UAAU,uBAAuBR,MAAO,CAAC8B,QAAS,QAAQrB,SAC7DF,cAAA,OAAKO,IAAKe,EAAab,IAAI,GAAGR,UAAU,oBAIhD,GCpCe,MAA0B,wCCkB1BuB,G,MAZA,WAGb,OACExB,cAAA,OAAKC,UAAU,kBAAiBC,SAC9BF,cAAA,OAAKC,UAAU,SAAQC,SACrBF,cAAA,OAAK,WAAS,YAAYO,IAAKkB,EAAahB,IAAI,GAAGR,UAAU,cAIrE,GChBe,MAA0B,gDCA1B,MAA0B,sDCA1B,GCAA,ICAA,IFAA,IAA0B,4CGmD1ByB,G,MAvCA,WAYb,OACEvB,eAAA,OAAKF,UAAU,SAAQC,SAAA,CACrBF,cAAA,OAAKC,UAAU,sBAAqBC,SAClCF,cAAA,OAAKC,UAAU,gBAAeC,SAC5BF,cAAA,OAAKC,UAAU,wBAAuBC,SACpCF,cAAA,OAAK,WAAS,aAAaO,IAAKoB,EAA2BlB,IAAI,GAAGjB,GAAG,kBAAkBS,UAAU,sCAIvGD,cAAA,OAAKC,UAAU,uBAAsBC,SACnCC,eAAA,OAAKF,UAAU,iBAAgBC,SAAA,CAC7BF,cAAA,OAAKC,UAAU,wBAAuBC,SACpCF,cAAA,OAAK,WAAS,YAAYO,IAAKqB,EAAiCnB,IAAI,GAAGjB,GAAG,wBAAwBS,UAAU,wCAE9GD,cAAA,OAAKC,UAAU,yBAAwBC,SAGrCF,cAAA,KAAGI,KAAK,4BAA4Bb,OAAO,SAAQW,SACjDF,cAAA,OAAK,WAAS,YAAYO,IAAKsB,EAAepB,IAAI,GAAGC,YA5BjE,SAAmBtB,GACHC,SAASC,eAAeF,EAAMG,OAAOC,IAC3CC,MAAMC,UAAY,aAC5B,EAyByFiB,aAvBzF,SAAoBvB,GACJC,SAASC,eAAeF,EAAMG,OAAOC,IAC3CC,MAAMC,UAAY,YAC5B,EAoBmHF,GAAG,eAAeS,UAAU,yCAOjJ,GCjDe,MAA0B,2CC6B1B6B,G,MArBE,WAYf,OACE9B,cAAA,OAAKC,UAAU,oBAAmBC,SAChCF,cAAA,OAAKC,UAAU,WAAUC,SACvBF,cAAA,OAAK,WAAS,YAAYO,IAAKwB,EAAgBtB,IAAI,GAAGR,UAAU,gBAIxE,GC3Be,MAA0B,4CC6B1B+B,G,MArBG,WAYhB,OACEhC,cAAA,OAAKC,UAAU,qBAAoBC,SACjCF,cAAA,OAAKC,UAAU,YAAWC,SACxBF,cAAA,OAAK,WAAS,YAAYO,IAAK0B,EAAiBxB,IAAI,GAAGR,UAAU,gBAIzE,GC3Be,MAA0B,2CC6B1BiC,G,MArBE,WAYf,OACElC,cAAA,OAAKC,UAAU,oBAAmBC,SAChCF,cAAA,OAAKC,UAAU,WAAUC,SACvBF,cAAA,OAAK,WAAS,YAAYO,IAAK4B,EAAgB1B,IAAI,GAAGR,UAAU,gBAIxE,GCrBemC,G,MAJG,WACb,OAAOpC,cAAAqC,WAAA,GACZ,GCgCeC,G,MAhBF,WACX,OACEnC,eAAA,OAAKF,UAAU,OAAMC,SAAA,CAEnBF,cAACwB,EAAM,IACPxB,cAAC0B,EAAM,IACP1B,cAAC8B,EAAQ,IACT9B,cAACgC,EAAS,IACVhC,cAACkC,EAAQ,IAGTlC,cAACoC,EAAS,MAGhB,GCZeG,G,MAjBA,WAGb,OACEpC,eAAA,OAAKF,UAAU,SAAQC,SAAA,CACrBF,cAAA,OAAKC,UAAU,kBAAiBC,SAC9BF,cAAA,OAAKC,UAAU,sBAAqBC,SAClCF,cAAA,WAAAE,SAAS,8oCAGbC,eAAA,OAAKF,UAAU,8BAA6BC,SAAA,CAC1CF,cAAA,OAAKC,UAAU,yBAAwBC,SAAC,qBAAsBF,cAAA,KAAGC,UAAU,yBAAyBG,KAAK,sCAAqCF,SAAC,0BAIvJ,G,wCCMQsC,EAAWC,EAAQ,KAAnBD,OAeJE,GAAc,EACZC,EAAwB,aAE1BC,EAAgB,CAAC,QAAW,CAAC,EACZ,WAAc,CAAC,QAAW,CAAC,QAAW,GACX,OAAU,6CACV,QAAW,8CACxB,IAAM,ys5DA8qCN,UAAa,CAAC,KAAQ,CAAC,iBAAoB,GAC7B,WAAc,CAAC,iBAAoB,GACnC,YAAe,CAAC,iBAAoB,GACpC,iBAAoB,CAAC,iBAAoB,GACzC,aAAgB,CAAC,iBAAoB,GACrC,eAAkB,CAAC,iBAAoB,GACvC,aAAgB,CAAC,iBAAoB,GACrC,eAAkB,CAAC,iBAAoB,GACvC,SAAY,CAAC,iBAAoB,GACjC,cAAiB,CAAC,iBAAoB,GACtC,UAAa,CAAC,iBAAoB,GAClC,YAAe,CAAC,iBAAoB,GACpC,YAAe,CAAC,iBAAoB,GACpC,cAAiB,CAAC,iBAAoB,GACtC,cAAiB,CAAC,iBAAoB,GACtC,UAAa,CAAC,iBAAoB,GAClC,kBAAqB,CAAC,iBAAoB,GAC1C,kBAAqB,CAAC,iBAAoB,GAC1C,mBAAsB,CAAC,iBAAoB,GAC3C,wBAA2B,CAAC,iBAAoB,GAChD,sBAAyB,CAAC,iBAAoB,GAC9C,aAAgB,CAAC,iBAAoB,GACrC,YAAe,CAAC,iBAAoB,GACpC,QAAW,CAAC,iBAAoB,GAChC,aAAgB,CAAC,iBAAoB,GACrC,aAAgB,CAAC,iBAAoB,GACrC,kBAAqB,CAAC,iBAAoB,GAC1C,kBAAqB,CAAC,iBAAoB,KACtE,MAAS,CAAC,QAAW,CAAC,QAAW,GACX,OAAU,6CACV,WAAc,8CAC1B,IAAM,KACN,UAAa,CAAC,KAAQ,CAAC,iBAAoB,MAG1EA,EAAuB,QAAIA,EAAcD,GAIzC,IA+6HIrE,EAAgFM,EAEhFiE,EAAUC,EAAQC,EA3DhBC,EAAc,CAClBC,YAAa,8DACbC,OAAQ,iDACRC,WAAY,kDAERC,EAAY,CAChBH,YAAa,CAAC,EAAE,mBACF,EAAE,oBACF,EAAE,kBACF,EAAE,oBACF,EAAE,mBACF,EAAE,oBACF,EAAE,kBACF,EAAE,oBACFI,gBAAiB,mFACjBC,SAAU,6EACxBJ,OAAQ,CAAC,EAAE,mBACF,EAAE,oBACF,EAAE,kBACF,EAAE,oBACF,EAAE,mBACF,EAAE,oBACF,EAAE,kBACF,EAAE,qBACXC,WAAY,CAAC,EAAE,kBACN,EAAE,mBACF,EAAE,iBACF,EAAE,mBACF,EAAE,kBACF,EAAE,mBACF,EAAE,iBACF,EAAE,qBAEPI,EAAoB,CAAC,QAAW,SACX,OAAU,cACV,WAAc,cACd,QAAW,eAEhCC,EAAgB,CACpBN,OAAQ,qCACRC,WAAY,qCACZM,OAAQ,GACRR,YAAa,iCAOTS,EAAqB,EAavBC,EADoB,UAwBxB,SAASC,GAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAK,GACzD,CAcqB,SAAAI,KAQpB,OARoBA,GAAAC,YAAAC,cAAAC,MAArB,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACM/B,EAAY,CAAD6B,EAAAE,KAAA,QACO,OAApB/B,GAAc,EAAM6B,EAAAE,KAAA,EACdC,KAAgB,KAAD,SAAAH,EAAAE,KAAA,EAC4BE,GAAS/B,EAA0B,WAAO,KAAG,KAAD,EAA7FA,EAA0B,WAAa,UAAC2B,EAAAK,KACxC5G,QAAQC,IAAI,aAAc2E,EAA0B,WAAa,WAAG,wBAAA2B,EAAAM,OAAA,GAAAR,EAAA,MAGvES,MAAA,KAAAC,UAAA,UAGcC,KAAW,OAAAC,GAAAH,MAAC,KAADC,UAAA,UAAAE,KAUzB,OAVyBA,GAAAf,YAAAC,cAAAC,MAA1B,SAAAc,IAAA,OAAAf,cAAAG,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OAQI,OAPF5B,EAAW,IAAIL,EAAO4C,UAAUC,aAAahF,OAAOiF,UACpDtH,QAAQC,IAAI,aAAc4E,GAC1BE,EAAkBF,EAAqB,WAAO,IAC9C7E,QAAQC,IAAI,eAAgB8E,GACxB,aAAcF,IAChBc,EAAed,EAAmB,SAAQ,KAC1C7E,QAAQC,IAAI,YAAa0F,IACzBwB,EAAAI,OAAA,SACK1C,GAAU,KAAF,mBAAAsC,EAAAN,OAAA,GAAAK,EAAE,MAClBJ,MAAA,KAAAC,UAAA,CAAC,SAGaS,GAASC,GAAA,OAAAC,GAAAZ,MAAC,KAADC,UAAA,UAAAW,KAYvB,OAZuBA,GAAAxB,YAAAC,cAAAC,MAAxB,SAAAuB,EAAyBC,GAAc,OAAAzB,cAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAGnC,GAFGmB,IACHA,EAAiB/C,GAEd+C,EAAe,CAADC,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EACMO,KAAc,KAAD,EAApCY,EAAcC,EAAAjB,KAAA,OAEhB,OAAAiB,EAAApB,KAAA,EACMmB,EAAeE,KAAK,sBAAuB,IAAI,KAAD,SAAAD,EAAApB,KAAA,GACrCmB,EAAeG,YAAY,KAAD,GACT,OADhCjD,EAAM+C,EAAAjB,KACN5G,QAAQC,IAAI,WAAY6E,GAAQ+C,EAAAN,OAAA,SACzBzC,GAAQ,KAAF,oBAAA+C,EAAAhB,OAAA,GAAAc,EAAE,MAChBb,MAAA,KAAAC,UAAA,CAAC,SAGaiB,GAAcC,GAAA,OAAAC,GAAApB,MAAC,KAADC,UAAA,UAAAmB,KAU5B,OAV4BA,GAAAhC,YAAAC,cAAAC,MAA7B,SAAA+B,EAA8BC,GAAY,OAAAjC,cAAAG,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OAGtC,GAFG2B,IACHA,EAAetD,GAEZsD,EAAa,CAADC,EAAA5B,KAAA,eAAA4B,EAAA5B,KAAA,EACMe,KAAY,KAAD,EAAhCY,EAAYC,EAAAzB,KAAA,OACZ,OAAAyB,EAAA5B,KAAA,EACmB2B,EAAaE,aAAa,KAAD,EACP,OADvChI,EAAY+H,EAAAzB,KACZ5G,QAAQC,IAAI,YAAaK,GAAc+H,EAAAd,OAAA,SAChCjH,GAAc,KAAF,oBAAA+H,EAAAxB,OAAA,GAAAsB,EAAE,MACtBrB,MAAA,KAAAC,UAAA,UAGcwB,GAAcC,GAAA,OAAAC,GAAA3B,MAAC,KAADC,UAAA,UAAA0B,KAW5B,OAX4BA,GAAAvC,YAAAC,cAAAC,MAA7B,SAAAsC,EAA8BN,GAAY,OAAAjC,cAAAG,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAGtC,GAFG2B,IACHA,EAAetD,GAEZsD,EAAa,CAADO,EAAAlC,KAAA,eAAAkC,EAAAlC,KAAA,EACMe,KAAY,KAAD,EAAhCY,EAAYO,EAAA/B,KAAA,OACZ,OAAA+B,EAAAlC,KAAA,EACmB2B,EAAaQ,aAAa,KAAD,EAEP,OAFvChI,EAAY+H,EAAA/B,KACZhG,EAAe4D,EAAOqE,MAAMC,YAAYlI,GACxCZ,QAAQC,IAAI,YAAaW,GAAc+H,EAAApB,OAAA,SAChC3G,GAAY,yBAAA+H,EAAA9B,OAAA,GAAA6B,EAAA,MACpB5B,MAAA,KAAAC,UAAA,CA+EM,SAAegC,GAAcC,GAAA,OAAAC,GAAAnC,MAAC,KAADC,UAAA,CAcnC,SAAAkC,KAAA,OAAAA,GAAA/C,YAAAC,cAAAC,MAdM,SAAA8C,EAA8BC,GAAa,IAAAC,EAAAC,EAAA,OAAAlD,cAAAG,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAY9C,OAXGd,IACHA,EAAe4D,MAGXF,EAAY9D,EAAkBI,GAIlCyD,EADEhE,EAAUiE,GAAWF,GACR3D,EAAc6D,GAAarE,EAAYqE,GAAajE,EAAUiE,GAAWF,GAEzE3D,EAAc6D,GAAaF,EAC1CG,EAAA/B,OAAA,SACK6B,GAAY,wBAAAE,EAAAzC,OAAA,GAAAqC,EAAA,MACpBpC,MAAA,KAAAC,UAAA,CAuBM,SAAewC,KAAU,OAAAC,GAAA1C,MAAC,KAADC,UAAA,CAS/B,SAAAyC,KAAA,OAAAA,GAAAtD,YAAAC,cAAAC,MATM,SAAAqD,IAAA,OAAAtD,cAAAG,MAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,UACAd,EAAa,CAAD+D,EAAAjD,KAAA,eAAAiD,EAAAjD,KAAA,EACEO,KAAc,KAAD,EAC1B,aADJnC,EAAQ6E,EAAA9C,QAENjB,EAAed,EAAmB,SAAQ,MAC1C,OAEwC,OAA5C7E,QAAQC,IAAI,iBAAkB0F,GAAc+D,EAAAnC,OAAA,SACrC5B,GAAY,wBAAA+D,EAAA7C,OAAA,GAAA4C,EAAA,MACpB3C,MAAA,KAAAC,UAAA,CAEM,SAAe4C,GAAeC,GAAA,OAAAC,GAAA/C,MAAC,KAADC,UAAA,CAiBpC,SAAA8C,KAAA,OAAAA,GAAA3D,YAAAC,cAAAC,MAjBM,SAAA0D,EAA+BC,GAAkB,IAAAX,EAAAY,EAAAC,EAAA,OAAA9D,cAAAG,MAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,OACe,GAArEzG,QAAQC,IAAI,0DACR8J,EAAmB,CAADG,EAAAzD,KAAA,SAOlB,OANFzG,QAAQC,IAAI,sBAAuB8J,GAKjCX,EAHGW,EAAmBI,SAAS,QAGhBJ,EAFAhB,GAAegB,GAG9BG,EAAAzD,KAAA,EACqB2D,MAAMhB,GAAc,KAAD,EAA5B,OAARY,EAAQE,EAAAtD,KAAAsD,EAAAzD,KAAA,GACcuD,EAASK,OAAO,KAAD,GACG,OADxCJ,EAAaC,EAAAtD,KACnB5G,QAAQC,IAAI,kBAAmBgK,GAAeC,EAAA3C,OAAA,SACvC0C,GAAa,QAEpBjK,QAAQC,IAAI,0BAAyB,QACrC,yBAAAiK,EAAArD,OAAA,GAAAiD,EAAA,MACHhD,MAAA,KAAAC,UAAA,CAMA,SAGcuD,GAAmBC,GAAA,OAAAC,GAAA1D,MAAA,KAAAC,UAAA,UAAAyD,KAwBjC,OAxBiCA,GAAAtE,YAAAC,cAAAC,MAAlC,SAAAqE,EAAoCC,GAAkB,IAAAC,EAAA,OAAAxE,cAAAG,MAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,OAIvB,GAAzBkE,GAAmB,EACI,YAAvBD,GAA2D,UAAvBA,EAA8B,CAAAE,EAAAnE,KAAA,eAAAmE,EAAAnE,KAAA,EAC9DpE,OAAOiF,SAASuD,QAAQ,CAC5BC,OAAQ,6BACRC,OAAQ,CAAC,CAAEC,QAAS,WACnB,KAAD,EACFL,GAAmB,EAAKC,EAAAnE,KAAA,mBACQ,WAAvBiE,EAA+B,CAAAE,EAAAnE,KAAA,gBAAAmE,EAAAnE,KAAA,GAClCpE,OAAOiF,SAASuD,QAAQ,CAC5BC,OAAQ,6BACRC,OAAQ,CAAC,CAAEC,QAAS,UACnB,KAAD,GACFL,GAAmB,EAAK,QAGtBA,IACFhF,EAAe+E,EACfC,GAAmB,EACnBtI,OAAOC,SAAS2I,UACjB,yBAAAL,EAAA/D,OAAA,GAAA4D,EAAA,MACF3D,MAAA,KAAAC,UAAA,CA4BM,SAAeL,GAAawE,GAAA,OAAAC,GAAArE,MAAC,KAADC,UAAA,CAyBlC,SAAAoE,KAAA,OAAAA,GAAAjF,YAAAC,cAAAC,MAzBM,SAAAgF,EAA6BV,GAAkB,OAAAvE,cAAAG,MAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cAAA4E,EAAA5E,KAAA,EAEnCO,KAAc,KAAD,EAAtB,OAARnC,EAAQwG,EAAAzE,KAAAyE,EAAA5E,KAAA,EACOe,GAAU3C,GAAU,KAAD,EAA5B,OAANC,EAAMuG,EAAAzE,KAAAyE,EAAA5E,KAAA,EACeuB,GAAelD,GAAQ,KAAD,EAA/B,OAAZxE,EAAY+K,EAAAzE,KAAAyE,EAAA5E,KAAA,GACS8B,GAAezD,GAAQ,KAAD,GAY3C,OAZAlE,EAAYyK,EAAAzE,KACR,aAAc/B,IAChBc,EAAed,EAAmB,SAAQ,KAC1C7E,QAAQC,IAAI,YAAa0F,IAEvB+E,GAAuB/E,IAAiB+E,IAC1C1K,QAAQC,IAAI,+BAAgCyK,GAC5CJ,GAAoBI,IAKtBW,EAAA9D,OAAA,SACO,CAAC,QAAWjH,EACX,aAAgBqF,EAEhB,QAAW/E,IAAe,KAAF,oBAAAyK,EAAAxE,OAAA,GAAAuE,EAAE,MAInCtE,MAAA,KAAAC,UAAA,CAWD,SAGeJ,GAAQ2E,GAAA,OAAAC,GAAAzE,MAAC,KAADC,UAAA,UAAAwE,KAYtB,OAZsBA,GAAArF,YAAAC,cAAAC,MAAvB,SAAAoF,EAAwBC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3F,cAAAG,MAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,OACnBiF,EAAY,CAAC,EAEnBC,EAAAK,YACoBP,GAAG,IAAvB,IAAAE,EAAAM,MAAAL,EAAAD,EAAAO,KAAAC,MACuB,cADZN,EAAKD,EAAAQ,OACFC,OACAP,EAASD,EAAMC,OAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IACnDd,EAAUG,EAAMW,MAAQV,EAE/B,OAAAW,GAAAd,EAAAe,EAAAD,EAAA,SAAAd,EAAAgB,GAAA,QAAAZ,EAAAxE,OAAA,SAEMmE,GAAS,wBAAAK,EAAAlF,OAAA,GAAA2E,EAAA,MACjB1E,MAAA,KAAAC,UAAA,CAIM,SAAe6F,GAAmBC,EAAAC,GAAA,OAAAC,GAAAjG,MAAC,KAADC,UAAA,CAyIzC,SAAAgG,KARC,OAQDA,GAAA7G,YAAAC,cAAAC,MAzIO,SAAA4G,EAAmCC,EAAqBC,GAAa,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9G,UAAA,OAAAZ,cAAAG,MAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,OAiBvB,GAjByB0G,EAAeU,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAC,GAAIT,EAAkBS,EAAAE,OAAA,QAAAC,IAAAH,EAAA,IAAAA,EAAA,GAClH7N,QAAQC,IAAI,kBAAmBgN,GAC/BjN,QAAQC,IAAI,kBAAmBiN,GAC/BlN,QAAQC,IAAI,oBAAqBkN,GACjCnN,QAAQC,IAAI,gBAAiBmN,GAKzBxI,EAAcqI,IAChBI,EAAmBzI,EAAcqI,GAA8B,QAAEtH,GACjDsH,IAEhBI,EAAmBJ,EACH,IAGlBjN,QAAQC,IAAI,oBAAqBoN,GAE5BvI,EAAO,CAADgJ,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACMe,KAAY,KAAD,GAA1B1C,EAAMgJ,EAAAlH,KAAA,QAO8D,GAJtE5G,QAAQC,IAAI,UAAW6E,EAAOmJ,WAExBX,EAAQ,IAAIY,IAAUtJ,EAAcqI,GAA0B,MAC9DkB,OAAOC,IAAYC,MACnBd,EAAW,IAAI/I,EAAO8J,SAASjB,EAAkBC,EAAOxI,GAExC,SAAlBoI,EAAwB,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACD8G,EAASgB,KAAKpB,EAAgB,GAAI,CAAEf,MAAO5H,EAAOqE,MAAM2F,WAAW,mBAAoB,WAAY,KAAD,GAA3HhB,EAAgBM,EAAAlH,MACE,EAAKkH,EAAArH,KAAA,qBACI,eAAlByG,EAA8B,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACd8G,EAASkB,WAAWtB,EAAgB,IAAI,KAAD,GAAhEK,EAAgBM,EAAAlH,MACE,EAAKkH,EAAArH,KAAA,qBACI,gBAAlByG,EAA+B,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACf8G,EAASmB,cAAc,KAAD,GAA/ClB,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,qBAAlByG,EAAoC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACpB8G,EAASoB,iBAAiBxB,EAAgB,IAAI,KAAD,GAAtEK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,iBAAlByG,EAAgC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GAChB8G,EAASqB,aAAazB,EAAgB,IAAI,KAAD,GAAlEK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,mBAAlByG,EAAkC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GAClB8G,EAASsB,eAAe1B,EAAgB,GAAIA,EAAgB,IAAI,KAAD,GAAxFK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,iBAAlByG,EAAgC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GAChB8G,EAASuB,eAAe,KAAD,GAAhDtB,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,mBAAlByG,EAAkC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GAClB8G,EAASwB,eAAe5B,EAAgB,IAAI,KAAD,GAApEK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,aAAlByG,EAA4B,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACZ8G,EAASyB,SAAS7B,EAAgB,IAAI,KAAD,GAA9DK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,kBAAlByG,EAAiC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACjB8G,EAAS0B,cAAc9B,EAAgB,GAAIA,EAAgB,IAAI,KAAD,GAAvFK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,sBAAlByG,EAAqC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACrB8G,EAAS2B,kBAAkB/B,EAAgB,IAAI,KAAD,GAAvEK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,sBAAlByG,EAAqC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACrB8G,EAAS4B,kBAAkBhC,EAAgB,IAAI,KAAD,GAAvEK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,uBAAlByG,EAAsC,CAAAY,EAAArH,KAAA,gBAAAqH,EAAArH,KAAA,GACtB8G,EAAS6B,mBAAmBjC,EAAgB,IAAI,KAAD,GAAxEK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,qBACW,4BAAlByG,EAA2C,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IAC3B8G,EAAS8B,wBAAwBlC,EAAgB,IAAI,KAAD,IAA7EK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,0BAAlByG,EAAyC,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACzB8G,EAAS+B,wBAAwB,KAAD,IAAzD9B,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,yBAAlByG,EAAwC,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACxB8G,EAASgC,uBAAuB,KAAD,IAAxD/B,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,iBAAlByG,EAAgC,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IAChB8G,EAASiC,aAAarC,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,IAAI,KAAD,IAA1GK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,gBAAlByG,EAA+B,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACf8G,EAASkC,YAAYtC,EAAgB,GAAIA,EAAgB,IAAI,KAAD,IAArFK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,YAAlByG,EAA2B,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACX8G,EAASmC,QAAQvC,EAAgB,GAAIA,EAAgB,IAAI,KAAD,IAAjFK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,iBAAlByG,EAAgC,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IAChB8G,EAASoC,aAAaxC,EAAgB,IAAI,KAAD,IAAlEK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,iBAAlByG,EAAgC,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IAChB8G,EAASqC,aAAazC,EAAgB,GAAIA,EAAgB,IAAI,KAAD,IAAtFK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,sBAAlByG,EAAqC,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACrB8G,EAASsC,kBAAkB1C,EAAgB,GAAIA,EAAgB,IAAI,KAAD,IAA3FK,EAAgBM,EAAAlH,KAAAkH,EAAArH,KAAA,sBACW,sBAAlByG,EAAqC,CAAAY,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACrB8G,EAASuC,kBAAkB3C,EAAgB,GAAIA,EAAgB,IAAI,KAAD,IAA3FK,EAAgBM,EAAAlH,KAAA,SAKkC,GAHpD5G,QAAQC,IAAI,qBAAsBuN,GAE9BC,EAAmBD,EAAiBuC,KACxC/P,QAAQC,IAAI,qBAAsBwN,IAE9BA,EAAiB,CAADK,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACc5B,EAASmL,sBAAsBvC,GAAkB,KAAD,IAGhF,GAHIC,EAAmBI,EAAAlH,KACvB5G,QAAQC,IAAI,kCAAmCyN,IAG3CN,EAAmB,CAADU,EAAArH,KAAA,UACpB2G,EAAmB6C,YAAc,YAC7BtC,EAAa,EAAE,KAAD,OACTD,EAAmB,CAAAI,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACpBb,GAAM,KAAK,KAAD,IAMf,OALG+H,EAAa,GACfP,EAAmB6C,YAAc,YACjCtC,EAAa,GAEbP,EAAmB8C,mBAAmB,YAAa,KACpDpC,EAAArH,KAAA,IAC2B5B,EAASmL,sBAAsBvC,GAAkB,KAAD,IAA5EC,EAAmBI,EAAAlH,KACnB+G,GAAY,EAAEG,EAAArH,KAAA,mBAEhBzG,QAAQC,IAAI,8BAA+ByN,GAGvCE,EAAa,EAAE,KAAD,SACVA,EAAc,EAAIlI,GAAmB,CAAAoI,EAAArH,KAAA,iBAAAqH,EAAArH,KAAA,IACrCb,GAAM,KAAK,KAAD,IACZ+H,EAAa,GACfP,EAAmB6C,YAAc,YACjCtC,EAAa,GAEbP,EAAmB8C,mBAAmB,YAAa,KAErDvC,GAAY,EACZC,GAAY,EAAEE,EAAArH,KAAA,mBAEhB2G,EAAmB6C,YAAc,YAAY,SAUG,OAApDjQ,QAAQC,IAAI,qBAAsBuN,GAAkBM,EAAAvG,OAAA,SAC7CiG,GAAgB,0BAAAM,EAAAjH,OAAA,GAAAmG,EAAA,KACxBD,GAAAjG,MAAA,KAAAC,UAAA,CAvcGrC,GAEF,WACmBuB,GAAAa,MAAA,KAAAC,UAAA,CAFnBoJ,GC9tKa,ICAA,ICAA,IFAA,IGgEXC,GAEAC,GACAC,GACAC,GAQAC,GACAC,GACAC,GC9EW,OAA0B,iDDmCrCC,I,QAAc,GAGdC,GAAa,CAAC,EAYdC,GAAe,GAWfC,GAAgB,UAChBC,GAAe,uBACfC,GAAgB,EAEhBC,GAAmBC,EAiBnB,iEAAiErR,KAAKC,UAAUC,YAClFC,QAAQC,IAAI,0BAId,IAAIkR,IAAmB,EACnB9O,OAAO+O,OAAOC,MAAQhP,OAAO+O,OAAOE,SACtCtR,QAAQC,IAAI,4BACZkR,IAAmB,EACnBnR,QAAQC,IAAI,wBAAyBoC,OAAO+O,OAAOC,OACnDrR,QAAQC,IAAI,yBAA0BoC,OAAO+O,OAAOE,SAGtD,IAgbeC,GA5aC,WAGhB,IAAApR,EAA2CC,qBAAWV,GACtDW,GADkBF,EAAZG,aAAgCH,EAAlBI,mBACwBH,qBAAWV,IACvDc,GADmBH,EAAbI,cAAiCJ,EAAlBK,mBACsBN,qBAAWV,IACtDiB,GADkBH,EAAZI,aAAgCJ,EAAlBK,mBACyBT,qBAAWV,IACxDoB,GADmBH,EAAbI,cAAkCJ,EAAnBK,oBAC2BZ,qBAAWV,IAAtCoB,EAAfG,gBAAqCH,EAApBI,qBAEvBU,qBAAU,WACRC,IAAIC,KAAK,CAAEC,SAAU,KACvB,GAAG,IAGqBV,SAASC,eAAe,mBAAhD,IAEIkQ,EAAanQ,SAASC,eAAe,mBAErCmQ,EAAYpQ,SAASC,eAAe,aACpCoQ,EAAYrQ,SAASC,eAAe,aACpCqQ,EAAYtQ,SAASC,eAAe,aAmBtC,SAEasQ,IAAiB,OAAAC,EAAA/K,MAAC,KAADC,UAAA,UAAA8K,IAI/B,OAJ+BA,EAAA3L,YAAAC,cAAAC,MAAhC,SAAAC,IAAA,IAAAyL,EAAAC,EAAA,OAAA5L,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEwD,OADhDqL,EAAc,IAAIE,KAClBD,EAAmBD,EAAYG,iBAAgB1L,EAAAgB,OAAA,SAC9CwK,GAAkB,KAAF,mBAAAxL,EAAAM,OAAA,GAAAR,EAAE,MAC1BS,MAAA,KAAAC,UAAA,CAEoB,SAAAd,IAWpB,OAXoBA,EAAAC,YAAAC,cAAAC,MAArB,SAAAc,IAAA,OAAAf,cAAAG,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OACEzG,QAAQC,IAAI,kCASZ,wBAAAkH,EAAAN,OAAA,GAAAK,EAAA,MACDJ,MAAA,KAAAC,UAAA,CAAC,SAEamL,IAAQ,OAAAC,EAAArL,MAAC,KAADC,UAAA,UAAAoL,IAetB,OAfsBA,EAAAjM,YAAAC,cAAAC,MAAvB,SAAAuB,IAAA,IAAA6F,EAAA,OAAArH,cAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACkD,GAAhDzG,QAAQC,IAAI,oCACP0Q,GAAY,CAAD9I,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,EACWC,GAjIV,WAiIsC,KAAD,EAApC,OAAAmB,EAAAjB,KAAAiB,EAAApB,KAAA,EACV2L,EAAmB,QAAQ,KAAD,SAAAvK,EAAApB,KAAA,EAEHmG,GAAoB,aAAc,UAAW,CAAC,KAAM,UAAYkE,GAAgB,WAAaC,KAAe,KAAD,EAApH,OAAhBvD,EAAgB3F,EAAAjB,KAAAiB,EAAApB,KAAA,GACDkD,GAAgB6D,EAAiB,IAAI,KAAD,GAKd,OALzCoD,GAAU/I,EAAAjB,KACV5G,QAAQC,IAAI,cAAe2Q,IAE3BD,IAAc,EACMtP,SAASC,eAAe,mBAC1BG,MAAM8B,QAAU,OAAOsE,EAAApB,KAAA,GACnC4L,EAAY,GAAG,KAAD,GACpB,yBAAAxK,EAAAhB,OAAA,GAAAc,EAAA,MACHb,MAAA,KAAAC,UAAA,CAUD,SAEeuL,EAAkB7K,GAAA,OAAA8K,EAAAzL,MAAC,KAADC,UAAA,UAAAwL,IAKhC,OALgCA,EAAArM,YAAAC,cAAAC,MAAjC,SAAA+B,EAAkC/G,GAAK,IAAAoR,EAAAC,EAAA,OAAAtM,cAAAG,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OACkB,OAAjD+L,EAAapR,EAAMG,OAAOC,GAAGkR,MAAM,YAAY,GAAErK,EAAA5B,KAAA,EACjD2L,EAAmBI,GAAY,KAAD,EACsF,OAApHC,EAAmB7B,GAAmB,OAAEI,GAAc2B,YAAsB,SAAEH,EAAWG,YAA0B,aAACtK,EAAA5B,KAAA,EACpH4L,EAAYI,GAAkB,KAAD,mBAAApK,EAAAxB,OAAA,GAAAsB,EAAA,MACpCrB,MAAA,KAAAC,UAAA,CAAC,SAGaqL,IAAkB,OAAAQ,EAAA9L,MAAC,KAADC,UAAA,UAAA6L,IAsBhC,OAtBgCA,EAAA1M,YAAAC,cAAAC,MAAjC,SAAAsC,IAAA,IAAAmK,EAAAC,EAAAC,EAAAP,EAAA3M,EAAAmN,EAAAC,EAAAlM,UAAA,OAAAZ,cAAAG,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAoBsC,OApBJoM,EAAKI,EAAAlF,OAAA,QAAAC,IAAAiF,EAAA,GAAAA,EAAA,GAAC,GAAIH,EAAIG,EAAAlF,OAAA,QAAAC,IAAAiF,EAAA,GAAAA,EAAA,GAAC,GAAIF,EAAKE,EAAAlF,OAAA,QAAAC,IAAAiF,EAAA,GAAAA,EAAA,GAAC,EAAGT,EAAUS,EAAAlF,OAAA,EAAAkF,EAAA,QAAAjF,EAAEnI,EAAIoN,EAAAlF,OAAA,EAAAkF,EAAA,QAAAjF,EAC5EhO,QAAQC,IAAI,8CACP4S,IACHA,EAAQ/B,IAELgC,IACHA,EAAO/B,IAEJgC,IACHA,EAAQ/B,IAELnL,IACHuK,GAAewB,IACf/L,EAAOuK,IAEH4C,EAAmB,CAAC,MAASH,EACT,KAAQC,EACR,MAASC,EACT,QAAWP,EACX,KAAQ3M,GAClCgL,GAAaqC,KAAKF,GAAkBrK,EAAApB,OAAA,SAC7ByL,GAAkB,KAAF,oBAAArK,EAAA9B,OAAA,GAAA6B,EAAE,KAC1BkK,EAAA9L,MAAA,KAAAC,UAAA,CAAC,SAGaoM,EAAwBlL,EAAAO,GAAA,OAAA4K,EAAAtM,MAAC,KAADC,UAAA,UAAAqM,IAKtC,OALsCA,EAAAlN,YAAAC,cAAAC,MAAvC,SAAAiN,EAAwCC,EAASC,GAAW,OAAApN,cAAAG,MAAA,SAAAkN,GAAA,cAAAA,EAAAhN,KAAAgN,EAAA/M,MAAA,OAC1DzG,QAAQC,IAAI,oDACZD,QAAQC,IAAI,sBAAuBsT,GACnCD,EAAQ7R,MAAMgS,KAAOF,EAAY,GAAGZ,WAAa,IACjDW,EAAQ7R,MAAMiS,OAASH,EAAY,GAAGZ,WAAa,IAAI,wBAAAa,EAAA3M,OAAA,GAAAwM,EAAA,MACxDvM,MAAA,KAAAC,UAAA,CAAC,SAGasL,IAAW,OAAAsB,EAAA7M,MAAC,KAADC,UAAA,UAAA4M,IA8EzB,OA9EyBA,EAAAzN,YAAAC,cAAAC,MAA1B,SAAAwN,IAAA,IAAAnB,EAAAoB,EAAA9M,UAAA,OAAAZ,cAAAG,MAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAArN,MAAA,OAiBmD,GAjBxBgM,EAAgBoB,EAAA9F,OAAA,QAAAC,IAAA6F,EAAA,IAAAA,EAAA,GACzC7T,QAAQC,IAAI,uCACZD,QAAQC,IAAI,iBAAkBwS,GACzBA,GAAyC,IAArBA,IACvBA,EAAmBzB,IAAiB,GAGtCA,GAAgByB,EAChBzS,QAAQC,IAAI,uBAAwB+Q,IAGpCC,GAAmBL,GAAmB,OAAEI,GAAc2B,YAAwB,WAC9EnB,EAAanQ,SAASC,eAAe,mBACrCtB,QAAQC,IAAIuR,GACZA,EAAWjP,IAAM0O,GACjBjR,QAAQC,IAAI,kBAAmBgR,IAE/BQ,EAAYpQ,SAASC,eAAe,cAChCsP,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAK,CAADmB,EAAArN,KAAA,SAIqC,OAHtG4J,GAAkBO,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAU,IACvFlB,EAAUlP,IAAM8N,GAChBoB,EAAUhQ,MAAM8B,QAAU,SAC1BiN,GAAwBI,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAkB,YAACmB,EAAArN,KAAA,GAChG0M,EAAyB1B,EAAWjB,IAAuB,KAAD,GAAAsD,EAAArN,KAAA,iBAEhEgL,EAAUhQ,MAAM8B,QAAU,OAAO,QAGc,GAAjDmO,EAAYrQ,SAASC,eAAe,cAChCsP,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAK,CAADmB,EAAArN,KAAA,SAIqC,OAHtG6J,GAAkBM,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAU,IACvFjB,EAAUnP,IAAM+N,GAChBoB,EAAUjQ,MAAM8B,QAAU,SAC1BkN,GAAwBG,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAkB,YAACmB,EAAArN,KAAA,GAChG0M,EAAyBzB,EAAWjB,IAAuB,KAAD,GAAAqD,EAAArN,KAAA,iBAEhEiL,EAAUjQ,MAAM8B,QAAU,OAAO,QAGc,GAAjDoO,EAAYtQ,SAASC,eAAe,cAChCsP,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAK,CAADmB,EAAArN,KAAA,SAIqC,OAHtG8J,GAAkBK,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAU,IACvFhB,EAAUpP,IAAMgO,GAChBoB,EAAUlQ,MAAM8B,QAAU,SAC1BmN,GAAwBE,GAAmB,OAAEI,GAAc2B,YAAsB,SAAE,GAAkB,YAACmB,EAAArN,KAAA,GAChG0M,EAAyBxB,EAAWjB,IAAuB,KAAD,GAAAoD,EAAArN,KAAA,iBAEhEkL,EAAUlQ,MAAM8B,QAAU,OAAO,QA4BnC,yBAAAuQ,EAAAjN,OAAA,GAAA+M,EAAA,KAGDD,EAAA7M,MAAA,KAAAC,UAAA,CA8JD,SAASgN,EAAgB3S,GACJA,EAAMG,OAAOC,GAAGkR,MAAM,YAAY,GACvCrR,SAASC,eAAeF,EAAMG,OAAOC,IADnD,IAIMwS,EAA4B,IAFZC,WAAW5R,OAAO6R,iBAAiB9S,EAAMG,QAAQ8P,OAGjE8C,EAA8B,IAFbF,WAAW5R,OAAO6R,iBAAiB9S,EAAMG,QAAQ+P,QAGxElQ,EAAMG,OAAOE,MAAM4P,MAAQ2C,EAAY,KACvC5S,EAAMG,OAAOE,MAAM6P,OAAS6C,EAAa,IAE3C,CAEA,SAASC,EAAiBhT,GACLA,EAAMG,OAAOC,GAAGkR,MAAM,YAAY,GACvCrR,SAASC,eAAeF,EAAMG,OAAOC,IADnD,IAIMwS,EAA4B,EAFZC,WAAW5R,OAAO6R,iBAAiB9S,EAAMG,QAAQ8P,OAE/B,IAClC8C,EAA8B,EAFbF,WAAW5R,OAAO6R,iBAAiB9S,EAAMG,QAAQ+P,QAE9B,IAC1ClQ,EAAMG,OAAOE,MAAM4P,MAAQ2C,EAAY,KACvC5S,EAAMG,OAAOE,MAAM6P,OAAS6C,EAAa,IAE3C,CAOA,OA5VE,WAEmBlO,EAAAa,MAAC,KAADC,UAAA,CAvBrBoJ,GAkXEhO,eAAA,OAAKF,UAAU,UAASC,SAAA,CACtBF,cAAA,OAAKC,UAAU,mBACbR,MAGE,CAAC,EAAES,SACLC,eAAA,OAAKF,UAAU,qBACbR,MAAQ0P,GAAoB,CAC1BE,MAAO,QACPgD,OAAQ,eACR,CAAC,EAAEnS,SAAA,CACLF,cAAA,OAAKC,UAAU,sBAAqBC,SAClCF,cAAA,OAAKsS,QAASpC,EAAU3P,IAAK0O,GAAkBxO,IAAI,GAAGjB,GAAG,kBAAkBS,UAAU,sBAEvFE,eAAA,OAAKF,UAAU,uBAAsBC,SAAA,CACnCF,cAAA,OAAKO,IAAI,GAAGE,IAAI,GAAGjB,GAAG,kBAAkBS,UAAU,kBAChDR,MAAO,CAAC8S,QAAQ,OAClBvS,cAAA,OAAKsS,QAAShC,EAAoB5P,YAAaqR,EAAiBpR,aAAcyR,EAAkB7R,IAAK8N,GAAiB5N,IAAI,GAAGjB,GAAG,YAAYS,UAAU,cACpJR,MAAO,CAAC8S,QAAQ,OAClBvS,cAAA,OAAKsS,QAAShC,EAAoB5P,YAAaqR,EAAiBpR,aAAcyR,EAAkB7R,IAAK+N,GAAiB7N,IAAI,GAAGjB,GAAG,YAAYS,UAAU,cACpJR,MAAO,CAAC8S,QAAQ,OAClBvS,cAAA,OAAKsS,QAAShC,EAAoB5P,YAAaqR,EAAiBpR,aAAcyR,EAAkB7R,IAAKgO,GAAiB9N,IAAI,GAAGjB,GAAG,YAAYS,UAAU,cACpJR,MAAO,CAAC8S,QAAQ,eAIxBvS,cAAA,OAAKC,UAAU,2BAA2BT,GAAG,2BAA0BU,SACrEF,cAAA,OAAKO,IAAKiS,GAAa/R,IAAI,GAAG6R,QAASpC,EAAU1Q,GAAG,kBAAkBS,UAAU,wBAItF,EE1fewS,I,OAVG,WAChB,OACEtS,eAAA,OAAKF,UAAU,YAAWC,SAAA,CAExBF,cAACuP,GAAO,IACRvP,cAACoC,EAAS,MAGhB,GCwDesQ,I,OAhEC,WAEd,SAASvT,EAAUC,GACHC,SAASC,eAAeF,EAAMG,OAAOC,IAC3CC,MAAMC,UAAY,aAC5B,CAEA,SAASC,EAAWP,GACJC,SAASC,eAAeF,EAAMG,OAAOC,IAC3CC,MAAMC,UAAY,YAC5B,CAEA,OACES,eAAA,OAAKF,UAAU,UAASC,SAAA,CACtBF,cAAA,OAAKC,UAAU,uBAAsBC,SACnCC,eAAA,OAAKF,UAAU,uBAAsBC,SAAA,CACnCF,cAAA,OAAKC,UAAU,2BAA2B,WAAS,aAAa,iBAAe,MAAKC,SAAC,6BACrFF,cAAA,OAAKC,UAAU,6BAA6B,WAAS,aAAa,iBAAe,MAAMR,MAAO,CAC5FkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,wCACrBF,cAAA,OAAKC,UAAU,cAAc,WAAS,aAAa,iBAAe,MAAMR,MAAO,CAC7EkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,oDACrBF,cAAA,KAAG,WAAS,YAAY,iBAAe,IAAII,KAAK,iCAAiCb,OAAO,SACxFU,UAAU,0BAA0BT,GAAG,gBAAgBkB,YAAavB,EAAWwB,aAAchB,EAAYF,MAAO,CAC9GkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,8BACrBF,cAAA,SACAA,cAAA,OAAK,WAAS,aAAc,iBAAe,MAAMC,UAAU,2BAA0BC,SAAC,wBACtFF,cAAA,OAAK,WAAS,aAAa,iBAAe,MAAMC,UAAU,6BAA6BR,MAAO,CAC5FkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,wCACrBF,cAAA,OAAK,WAAS,aAAa,iBAAe,MAAMC,UAAU,cAAcR,MAAO,CAC7EkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,yEACrBF,cAAA,KAAG,WAAS,YAAY,iBAAe,IAAII,KAAK,gCAAgCb,OAAO,SACvFU,UAAU,0BAA0BT,GAAG,eAAekB,YAAavB,EAAWwB,aAAchB,EAAYF,MAAO,CAC7GkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,6BACrBF,cAAA,SACAA,cAAA,OAAK,WAAS,aAAa,iBAAe,MAAMC,UAAU,2BAA0BC,SAAC,sBACrFF,cAAA,OAAK,WAAS,aAAa,iBAAe,OAAOC,UAAU,6BAA6BR,MAAO,CAC7FkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,8CACrBF,cAAA,OAAK,WAAS,aAAa,iBAAe,OAAOC,UAAU,cAAcR,MAAO,CAC9EkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,+DACrBF,cAAA,KAAG,WAAS,YAAY,iBAAe,KAAKI,KAAK,8BAA8Bb,OAAO,SACtFU,UAAU,0BAA0BT,GAAG,aAAakB,YAAavB,EAAWwB,aAAchB,EAAYF,MAAO,CAC3GkT,eAAgB,OAChBC,MAAO,WAAW1S,SAAC,gCAGzBF,cAAA,OAAKC,UAAU,wBAAuBC,SACpCF,cAAA,OAAKC,UAAU,kBAAiBC,SAC9BF,cAAA,OAAKC,UAAU,wBAAuBC,SACpCF,cAAA,OAAK,WAAS,YAAYO,IAAK2O,EAAmBzO,IAAI,GAAGR,UAAU,yBAM/E,GCpDe4S,I,OAVG,WAChB,OACE1S,eAAA,OAAKF,UAAU,YAAWC,SAAA,CAExBF,cAAC0S,GAAO,IACR1S,cAACoC,EAAS,MAGhB,G,kBCuBe0Q,GA1BH,WACP,IAAAC,EAAyCC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAlDzU,EAAY2U,EAAA,GAAE1U,EAAkB0U,EAAA,GACrCE,EAA0CH,mBAAS,MAAKI,EAAAF,YAAAC,EAAA,GAAnD1U,EAAa2U,EAAA,GAAE1U,EAAkB0U,EAAA,GACtCC,EAAyCL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAAlDzU,EAAY0U,EAAA,GAAEzU,EAAkByU,EAAA,GACrCC,EAA2CP,mBAAS,MAAKQ,EAAAN,YAAAK,EAAA,GAApDxU,EAAayU,EAAA,GAAExU,EAAmBwU,EAAA,GACvCC,EAA8CT,mBAAS,MAAKU,EAAAR,YAAAO,EAAA,GAAvDxU,EAAeyU,EAAA,GAAExU,EAAoBwU,EAAA,GAC1C,OACK1T,cAACtC,EAAqBiW,SAAQ,CAACvJ,MAAO,CAAE9L,eAAcC,qBACdK,eAAcC,qBACdJ,gBAAeC,qBACfK,gBAAeC,sBACfC,kBAAiBC,wBAAuBgB,SAC3EC,eAACyT,KAAa,CAAA1T,SAAA,CACTF,cAACe,EAAU,IACXf,cAAC9B,EAAM,IACPiC,eAAC0T,KAAM,CAAA3T,SAAA,CACFF,cAAC8T,KAAK,CAACC,OAAK,EAACC,KAAK,IAAI1C,QAAStR,cAACsC,EAAI,MACpCtC,cAAC8T,KAAK,CAACC,OAAK,EAACC,KAAK,+BAA+B1C,QAAStR,cAACyS,GAAS,MACpEzS,cAAC8T,KAAK,CAACC,OAAK,EAACC,KAAK,+BAA+B1C,QAAStR,cAAC6S,GAAS,SAEzE7S,cAACuC,EAAM,QAI3B,EChCA0R,IAASC,OACJlU,cAACrC,IAAMwW,WAAU,CAAAjU,SACZF,cAAC8S,GAAG,MAETzT,SAASC,eAAe,Q","file":"static/js/main.8d1268bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SmartContractContext = React.createContext(null);\r\n\r\nexport default SmartContractContext;","export default __webpack_public_path__ + \"static/media/logo.bdf03968.png\";","export default __webpack_public_path__ + \"static/media/twitter.c561cadd.png\";","export default __webpack_public_path__ + \"static/media/instagram.9ffb2f16.png\";","export default __webpack_public_path__ + \"static/media/linkedin.76350122.png\";","export default __webpack_public_path__ + \"static/media/discord.667df059.png\";","//--------------------------------------------------------------------------------------------------\r\n//# Imports\r\n\r\nimport React, { useEffect, useContext } from 'react';\r\nimport SmartContractContext from '../../scripts/SmartContractContext';\r\nimport Aos from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\n//import walletButton from '../../image/button_4x1.png'\r\n//import connectWallet from '../../scripts/SmartContractOperator';\r\n\r\nimport logo from '../../image/logo.png'\r\n\r\nimport twitter_icon from '../../image/icons/twitter.png'\r\nimport linkedin_icon from '../../image/icons/linkedin.png'\r\nimport instagram_icon from '../../image/icons/instagram.png'\r\nimport discord_icon from '../../image/icons/discord.png'\r\n\r\nimport './navbar.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//--------------------------------------------------------------------------------------------------\r\n//# Variables\r\n\r\nconst connect_on_load = false;\r\n\r\nvar mobile = false;\r\nif( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n  console.log(\"Mobile device detected\");\r\n  mobile = true;\r\n};\r\n\r\n\r\n\r\n//AppStart\r\nconst Navbar = () => {\r\n\r\nlet { user_address, setAddress_Context } = useContext(SmartContractContext);\r\nlet { user_token_ID, setTokenID_Context } = useContext(SmartContractContext);\r\nlet { user_balance, setBalance_Context } = useContext(SmartContractContext);\r\nlet { user_metadata, setMetadata_Context } = useContext(SmartContractContext);\r\nlet { user_avatar_URI, setAvatarURI_Context } = useContext(SmartContractContext);\r\n\r\nuseEffect(() => {\r\n  Aos.init({ duration: 2000 });\r\n}, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//--------------------------------------------------------------------------------------------------\r\n//# Functions\r\n\r\nfunction mouseover(event) {\r\n  let element = document.getElementById(event.target.id);\r\n  element.style.transform = 'scale(1.20)';\r\n};\r\n\r\nfunction mouseleave(event) {\r\n  let element = document.getElementById(event.target.id);\r\n  element.style.transform = 'scale(1.0)';\r\n};\r\n\r\n\r\n\r\n\r\n//--------------------------------------------------------------------------------------------------\r\n//# HTML\r\n\r\nreturn (\r\n  <div className='navbar'>\r\n    {/* <div className='navbarMobile'>\r\n      <div className='navbarCenterIcon'>\r\n        <div className='navbarMobileTopRight '>MobileLeftTitle</div>\r\n      </div>\r\n    </div>\r\n    <div className='navbarMobileButton'>\r\n      <MobileMenu className={Mobile ? 'Mobile' : 'Mobile'} onClick={HandleMobileMenu} />\r\n      <div className={Mobile ? 'navbarMobileContainerActive' : 'navbarMobileContainer'}>\r\n        <div className={Mobile ? 'navbarMenu active' : 'navbarMenu'}>\r\n          <div className='navbarMenuContainer'>\r\n            <div className='navbarMobileTop'>\r\n              <div className='navbarMobileTopRight menuOpen'>MobileMenuText</div>\r\n              <div className='navbarMobileTopLeft'>\r\n                <Close className='CloseIcon' onClick={HandleMobileMenu} />\r\n              </div>\r\n            </div>\r\n            <div className='navbarMobileMain'>\r\n              <div className='navbarCenterLink opacity7'>MobileMenuMiddleText</div>\r\n              <div className='navbarCenterLink navbarRightButton'>MobileMenuButton</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>*/}\r\n    <div className='navbarContainer SlideRightAnimation'>\r\n      <div className='navbarLeft'>\r\n        <div id=\"navbarLogo\" className='navbarLogo'>\r\n          <a href={window.location['origin']}>\r\n            <img data-aos=\"fade-down-right\" className=\"navbarLogoImage\" id=\"navbarLogoImage\" src={logo} alt='Home' onMouseOver={mouseover} onMouseLeave={mouseleave}/>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className='navbarRight'>\r\n        <div className='navbarSocialsContainer'>\r\n          <div className='navbarIconContainer'>\r\n            <a href='https://www.instagram.com/melioraapp/' target=\"_blank\">\r\n              <img data-aos=\"fade-down-left\" src={instagram_icon} onMouseOver={mouseover} onMouseLeave={mouseleave} id='instagramIcon' className='navbarIcon instagramIcon' alt='@MelioraFun'/>\r\n            </a>\r\n            {/* <a href='https://www.linkedin.com/in/evan-gottschalk/' target=\"_blank\">\r\n              <img data-aos=\"fade-down\" src={linkedin_icon} onMouseOver={mouseover} onMouseLeave={mouseleave} id='linkedinIcon' className='navbarIcon linkedinIcon' alt='NoFun Labs'/>\r\n            </a> */}\r\n            <a href='https://nofunz.one/discord/' target=\"_blank\">\r\n              <img data-aos=\"fade-down\" src={discord_icon} onMouseOver={mouseover} onMouseLeave={mouseleave} id='discordIcon' className='navbarIcon discordIcon' alt='Join Discord'/>\r\n            </a>\r\n            <a href='https://twitter.com/melioraFun' target=\"_blank\">\r\n              <img data-aos=\"fade-down-right\" src={twitter_icon} onMouseOver={mouseover} onMouseLeave={mouseleave} id='twitterIcon' className='navbarIcon twitterIcon' alt='@MelioraFun'/>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n}\r\n//AppEnd\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/background1.e41ba16e.png\";","import React from 'react'\r\n\r\nimport background1 from '../../image/background1.png'\r\n//import background2 from '../../image/background2.png'\r\n//import background3 from '../../image/background3.png'\r\n\r\n\r\nimport './background.css'\r\n\r\nconst Background = () => {\r\n\r\n  var mobile_device = false;\r\n  if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n    console.log(\"Mobile device detected\");\r\n    mobile_device = true;\r\n  };\r\n  \r\n  window.addEventListener('scroll', function() {\r\n    const parallax = document.querySelector('.background1Container');\r\n    let scrollPosition = window.scrollY;\r\n\r\n    parallax.style.transform = 'translateY(' + scrollPosition * 0.7 + 'px)';\r\n  });\r\n  return (\r\n    <div classname='background'>\r\n      <div className='background1Container'>\r\n        <img src={background1} alt='' className='background1' />\r\n      </div>\r\n      <div className='background2Container' style={{display: 'none'}}>\r\n        <img src={background1} alt='' className='background2'/>\r\n      </div>\r\n      <div className='background3Container' style={{display: 'none'}}>\r\n        <img src={background1} alt='' className='background3' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Background","export default __webpack_public_path__ + \"static/media/banner-home.4e8ed300.png\";","import React from 'react'; \r\n\r\nimport home_banner from '../../image/banner-home.png'\r\n\r\nimport './banner.css'\r\n\r\nconst Banner = () => {\r\n  \r\n\r\n  return (\r\n    <div className='bannerContainer'>\r\n      <div className='banner'>\r\n        <img data-aos=\"fade-left\" src={home_banner} alt='' className='banner' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banner","export default __webpack_public_path__ + \"static/media/meliora_comic_cover.93408526.png\";","export default __webpack_public_path__ + \"static/media/meliora_comic_description.0b8fa835.png\";","export default __webpack_public_path__ + \"static/media/sign_up_button.00fe9212.png\";","export default __webpack_public_path__ + \"static/media/mint_comic_button.21807524.png\";","export default __webpack_public_path__ + \"static/media/play_read_button.2ee5edc6.png\";","import React from 'react'\n\nimport meliora_comic_cover_image from '../../image/meliora_comic_cover.png'\nimport meliora_comic_description_image from '../../image/meliora_comic_description.png'\nimport mint_button_image from '../../image/mint_comic_button.png'\nimport play_read_button_image from '../../image/play_read_button.png'\nimport sign_up_image from '../../image/sign_up_button.png'\n\n\n\nimport './comics.css'\n\nconst Comics = () => {\n\n  function mouseover(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.10)';\n  }\n  \n  function mouseleave(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.0)';\n  }\n\n  return (\n    <div className='comics'>\n      <div className='comicsLeftContainer'>\n        <div className='comicsLeftTop'>\n          <div className='comicsImageContainer1'>\n            <img data-aos=\"fade-right\" src={meliora_comic_cover_image} alt='' id='comicCoverImage' className='comicsImage comicCoverImage'  />\n          </div>\n        </div>\n      </div>\n      <div className='comicsRightContainer'>\n        <div className='comicsRightTop'>\n          <div className='comicsImageContainer2'>\n            <img data-aos=\"fade-left\" src={meliora_comic_description_image} alt='' id='comicDescriptionImage' className='comicsImage comicDescriptionImage' />\n          </div>\n          <div className='comicsButtonsContainer'>\n            {/* <img data-aos=\"fade-left\" src={mint_button_image} alt='' onMouseOver={mouseover} onMouseLeave={mouseleave} id='comicsMintButton' className='comicsButton comicsMintButton' />\n            <img data-aos=\"fade-left\" src={play_read_button_image} alt='' onMouseOver={mouseover} onMouseLeave={mouseleave} id='comicsDescriptionButton' className='comicsButton comicDescriptionButton' /> */}\n            <a href=\"https://nofunz.one/signup\" target='_blank'>\n              <img data-aos=\"fade-left\" src={sign_up_image} alt='' onMouseOver={mouseover} onMouseLeave={mouseleave} id='signUpButton' className='comicsButton signUpButton' />\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Comics\n","export default __webpack_public_path__ + \"static/media/universe-image.8a76d6be.png\";","import React from 'react'\n\nimport universe_image from '../../image/universe-image.png'\n\n\n\nimport './universe.css'\n\nconst Universe = () => {\n\n  function mouseover(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.20)';\n  }\n  \n  function mouseleave(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.0)';\n  }\n\n  return (\n    <div className='universeContainer'>\n      <div className='universe'>\n        <img data-aos=\"fade-left\" src={universe_image} alt='' className='universe' />\n      </div>\n    </div>\n  )\n}\n\nexport default Universe\n","export default __webpack_public_path__ + \"static/media/guardians-image.9723b1bc.png\";","import React from 'react'\n\nimport guardians_image from '../../image/guardians-image.png'\n\n\n\nimport './guardians.css'\n\nconst Guardians = () => {\n\n  function mouseover(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.20)';\n  }\n  \n  function mouseleave(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.0)';\n  }\n\n  return (\n    <div className='guardiansContainer'>\n      <div className='guardians'>\n        <img data-aos=\"fade-left\" src={guardians_image} alt='' className='universe' />\n      </div>\n    </div>\n  )\n}\n\nexport default Guardians\n","export default __webpack_public_path__ + \"static/media/partners-image.e21e9a12.png\";","import React from 'react'\n\nimport partners_image from '../../image/partners-image.png'\n\n\n\nimport './partners.css'\n\nconst Partners = () => {\n\n  function mouseover(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.20)';\n  }\n  \n  function mouseleave(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.0)';\n  }\n\n  return (\n    <div className='partnersContainer'>\n      <div className='partners'>\n        <img data-aos=\"fade-left\" src={partners_image} alt='' className='partners' />\n      </div>\n    </div>\n  )\n}\n\nexport default Partners\n","import React from 'react'\nimport './animation.css'\nconst Animation = () => {\n     return <></>\n}\n\nexport default Animation\n","import React from 'react'\n// import About from '../../components/about/About'\n// import Services from '../../components/services/Services'\n//import Roadmap from '../../components/roadmap/Roadmap'\n//import Team from '../../components/team/Team'\n//import FAQ from '../../components/faq/FAQ'\n\n// import Background from '../../components/background/Background';\nimport Banner from '../../components/banner/Banner';\nimport Comics from '../../components/comics/Comics';\nimport Universe from '../../components/universe/Universe';\nimport Guardians from '../../components/guardians/Guardians';\nimport Partners from '../../components/partners/Partners';\nimport Animation from '../../components/animation/Animation';\n//import PageDescription from '../../components/pagedescription/PageDescription'\n//import GetStarted from '../../components/getstarted/GetStarted'\n//import EvolutionDescription from '../../components/evolutiondescription/EvolutionDescription'\n\nimport './main.css'\n\nconst Main = () => {\n  return (\n    <div className='main'>\n      {/* <Background /> */}\n      <Banner />\n      <Comics />\n      <Universe />\n      <Guardians />\n      <Partners />\n      {/*/<About />*/}\n      {/*/<Services />*/}\n      <Animation />\n    </div>\n  )\n}\n\nexport default Main\n","import React from 'react'; \r\n\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n  \r\n\r\n  return (\r\n    <div className='footer'>\r\n      <div className='footerContainer'>\r\n        <div className='footerTextContainer'>\r\n          <marquee>Pop quiz, hot shot! What's the first blockchain ever created? (hint: it's not bitcoin) . . . . . . . . . . . . . . . . . . . . Did you know? Over 99% of NFT data is not stored on a blockchain! . . . . . . . . . . . . . . . . . . . .  Pop quiz, hot shot! What's the first country to recognize $BTC as a national currency? (hint: it's not El Salvador) . . . . . . . . . . . . . . . . . . . . Did you know? Ordinals allow for the Bitcoin blockchain to run ANY code, including AI models like ChatGPT, OS's like Windows 11, iOS, PS5 and beyond . . . . . . . . . . . . . . . . . . . . Pop quiz, hot shot! What's the first blockchain ever created? (hint: it's not bitcoin) . . . . . . . . . . . . . . . . . . . . Did you know? Over 99% of NFT data is not stored on a blockchain! . . . . . . . . . . . . . . . . . . . .  Pop quiz, hot shot! What's the first country to recognize $BTC as a national currency? (hint: it's not El Salvador) . . . . . . . . . . . . . . . . . . . . Did you know? Ordinals allow for the Bitcoin blockchain to run ANY code, including AI models like ChatGPT, OS's like Windows 11, iOS, PS5 and beyond . . . . . . . . . . . . . . . . . . . .</marquee>\r\n        </div>\r\n      </div>\r\n      <div className='creatorAttributionContainer'>\r\n        <div className='creatorAttributionText'>Site created by </div><a className='creatorAttributionLink' href=\"https://twitter.com/EvanOnEarth_eth\">@EvanOnEarth_eth</a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","// To add:\n// 1. Default function for calling any contract that makes sure there will be no errors,\n//    waits for any missing information, and has error handling.\n//      -This will include confirming that providers._network is defined\n\n// Admin page:\n// 1. Import admin settings from json, then create backup copy, then edit json to modify site\n// 2. Detailed settings for individual pages such as website.com/avatar are modified at website.com/admin/avatar\n//    Then, gate all /admin pages behind admin login\n\n// Web3 Oracles\n// 1. Supra\n// 2. Gelato\n// 3. ChainLink\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Imports\n\nimport { FormatTypes, Interface } from \"@ethersproject/abi\";\n\nconst { ethers } = require(\"ethers\");\n//const { utils } = require('ethers').utils;\n//const { BigNumber } = require('ethers').BigNumber;\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Variable Declaration\n\nlet run_on_load = false;\nconst default_contract_name = 'Signatures';\n\nlet contract_dict = {'default': {},\n                     'Signatures': {'Address': {'mainnet': '',\n                                                'goerli': '0x22d95fff7bb4e88bf1651daea74e36896919dbc0',\n                                                'sepolia': '0x1Fd69E3941030940f58e537B15bea96F5e766291'},\n                                   'ABI': `[{\n                                    \"inputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"constructor\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"Approval\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"name\": \"ApprovalForAll\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_fromTokenId\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_toTokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"BatchMetadataUpdate\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"_tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"MetadataUpdate\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"previousOwner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"newOwner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"OwnershipTransferred\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"PrimaryTokenAssigned\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_timestamp\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"completer_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"TaskCompleted\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_count\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"name\": \"TaskCreated\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": true,\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"Transfer\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"anonymous\": false,\n                                    \"inputs\": [\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"indexed\": false,\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"WhitelistAssigned\",\n                                    \"type\": \"event\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_metadata_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__createTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__mintFree\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"new_collectionInfoURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__setContractURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"old_collectionInfoURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"new_max_supply\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"__setMaxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"old_max_supply\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"new_price\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"__setMintPrice\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"old_price\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"__setPrimaryTokenID\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"__setTokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"old_token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"_maxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"approve\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"balanceOf\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"characters\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tasks_completed\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"collectionInfoURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"completeTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"contractURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getApproved\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getCharacter\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"string[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"string[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"address[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"address[]\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"getMaxSupply\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"whitelist_tier\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"getMintPrice\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"index\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryHolderByIndex\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"getPrimaryHolderCount\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryTokenID\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getPrimaryTokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"_tokenURI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"getTask\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"internalType\": \"address[]\",\n                                        \"name\": \"\",\n                                        \"type\": \"address[]\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"getTaskHash\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"user_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"getWhitelistTier\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"holderPrimaryTokens\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"owner\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"isApprovedForAll\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"token_URI\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"name\": \"mint\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"payable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"mint_limits\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"name\": \"mint_prices\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"name\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"owner\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"ownerOf\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"primaryTokenHolderIndex\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"renounceOwnership\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"safeTransferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes\",\n                                        \"name\": \"data\",\n                                        \"type\": \"bytes\"\n                                      }\n                                    ],\n                                    \"name\": \"safeTransferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"operator\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"approved\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"name\": \"setApprovalForAll\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"token_ID\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"setPrimaryTokenID\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"bytes4\",\n                                        \"name\": \"interfaceId\",\n                                        \"type\": \"bytes4\"\n                                      }\n                                    ],\n                                    \"name\": \"supportsInterface\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"bool\",\n                                        \"name\": \"\",\n                                        \"type\": \"bool\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [],\n                                    \"name\": \"symbol\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"\",\n                                        \"type\": \"bytes32\"\n                                      }\n                                    ],\n                                    \"name\": \"taskHashArray\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"tasks\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"metadata_URI\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_ID\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"task_tags\",\n                                        \"type\": \"string\"\n                                      },\n                                      {\n                                        \"internalType\": \"bytes32\",\n                                        \"name\": \"task_hash\",\n                                        \"type\": \"bytes32\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"task_creation_timestamp\",\n                                        \"type\": \"uint256\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"task_creator_address\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"tokenURI\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"string\",\n                                        \"name\": \"\",\n                                        \"type\": \"string\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"from\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"to\",\n                                        \"type\": \"address\"\n                                      },\n                                      {\n                                        \"internalType\": \"uint256\",\n                                        \"name\": \"tokenId\",\n                                        \"type\": \"uint256\"\n                                      }\n                                    ],\n                                    \"name\": \"transferFrom\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"newOwner\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"transferOwnership\",\n                                    \"outputs\": [],\n                                    \"stateMutability\": \"nonpayable\",\n                                    \"type\": \"function\"\n                                  },\n                                  {\n                                    \"inputs\": [\n                                      {\n                                        \"internalType\": \"address\",\n                                        \"name\": \"\",\n                                        \"type\": \"address\"\n                                      }\n                                    ],\n                                    \"name\": \"whitelist_tiers\",\n                                    \"outputs\": [\n                                      {\n                                        \"internalType\": \"uint16\",\n                                        \"name\": \"\",\n                                        \"type\": \"uint16\"\n                                      }\n                                    ],\n                                    \"stateMutability\": \"view\",\n                                    \"type\": \"function\"\n                                  }]`,\n                                   'Functions': {'mint': {'number_of_inputs': 1},\n                                                 '__mintFree': {'number_of_inputs': 1},\n                                                 'contractURI': {'number_of_inputs': 0},\n                                                 '__setContractURI': {'number_of_inputs': 1},\n                                                 'getMintPrice': {'number_of_inputs': 0},\n                                                 '__setMintPrice': {'number_of_inputs': 1},\n                                                 'getMaxSupply': {'number_of_inputs': 0},\n                                                 '__setMaxSupply': {'number_of_inputs': 1},\n                                                 'tokenURI': {'number_of_inputs': 1},\n                                                 '__setTokenURI': {'number_of_inputs': 2},\n                                                 'lockToken': {'number_of_inputs': 2},\n                                                 '__lockToken': {'number_of_inputs': 2},\n                                                 'unlockToken': {'number_of_inputs': 1},\n                                                 '__unlockToken': {'number_of_inputs': 1},\n                                                 'getTimeLocked': {'number_of_inputs': 1},\n                                                 'getLocked': {'number_of_inputs': 1},\n                                                 'getPrimaryTokenID': {'number_of_inputs': 1},\n                                                 'setPrimaryTokenID': {'number_of_inputs': 2},\n                                                 'getPrimaryTokenURI': {'number_of_inputs': 1},\n                                                 'getPrimaryHolderByIndex': {'number_of_inputs': 1},\n                                                 'getPrimaryHolderCount': {'number_of_inputs': 0},\n                                                 '__createTask': {'number_of_inputs': 3},\n                                                 'getTaskHash': {'number_of_inputs': 2},\n                                                 'getTask': {'number_of_inputs': 2},\n                                                 'getCharacter': {'number_of_inputs': 1},\n                                                 'completeTask': {'number_of_inputs': 2},\n                                                 'completeTaskBatch': {'number_of_inputs': 2},\n                                                 'setApprovalForAll': {'number_of_inputs': 2}}},\n                     'LMNTL': {'Address': {'mainnet': '',\n                                           'goerli': '0xA70CB9f3768D9AEdF7390Fed92770dCDdE1D0C1D',\n                                           'hyperspace': '0xB4fECac2F5BdEc2eD15547cF857464c8691b9849'},\n                               'ABI': `[]`,\n                               'Functions': {'mint': {'number_of_inputs': 1}}}};\n\n\ncontract_dict['default'] = contract_dict[default_contract_name];\n\n\n// *Update the contract address list based on your smart contract\nconst contract_address_dict = {'default': {'goerli': '0x355DfD19FEB09F0A89d2aeac57DaD181cB81eBF9'},\n                               'LMNTL': {'mainnet': '',\n                                         'goerli': '0xA70CB9f3768D9AEdF7390Fed92770dCDdE1D0C1D',\n                                         'hyperspace': '0xB4fECac2F5BdEc2eD15547cF857464c8691b9849'},\n                               'Signatures': {'goerli': '0x355DfD19FEB09F0A89d2aeac57DaD181cB81eBF9',\n                                              'sepolia': ''} \n                                };\n\nconst contract_function_dict = {'default': {1: {'name': 'mint',\n                                                'number_of_inputs': 1},\n                                            2: {'name': 'contractURI',\n                                                'number_of_inputs': 0},\n                                            3: {'name': 'setContractURI',\n                                                'number_of_inputs': 1},\n                                            4: {'name': 'getPrimaryTokenID',\n                                                'number_of_inputs': 1},\n                                            5: {'name': 'setPrimaryTokenID',\n                                                'number_of_inputs': 2},\n                                            6: {'name': 'getPrimaryTokenURI',\n                                                'number_of_inputs': 1},\n                                            7: {'name': 'getAllPrimaryHolders',\n                                                'number_of_inputs': 0}}}\n\n\n// *Update JSON ABI list with your smart contract's latest JSON ABI\nconst json_ABI_list = {'LMNTL': {'mainnet': `[]`,\n                                    'goerli': `[\n                                      {\n                                        \"inputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"constructor\"\n                                      },\n                                      {\n                                        \"anonymous\": false,\n                                        \"inputs\": [\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"account\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"operator\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": false,\n                                            \"internalType\": \"bool\",\n                                            \"name\": \"approved\",\n                                            \"type\": \"bool\"\n                                          }\n                                        ],\n                                        \"name\": \"ApprovalForAll\",\n                                        \"type\": \"event\"\n                                      },\n                                      {\n                                        \"anonymous\": false,\n                                        \"inputs\": [\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"operator\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"from\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"to\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": false,\n                                            \"internalType\": \"uint256[]\",\n                                            \"name\": \"ids\",\n                                            \"type\": \"uint256[]\"\n                                          },\n                                          {\n                                            \"indexed\": false,\n                                            \"internalType\": \"uint256[]\",\n                                            \"name\": \"values\",\n                                            \"type\": \"uint256[]\"\n                                          }\n                                        ],\n                                        \"name\": \"TransferBatch\",\n                                        \"type\": \"event\"\n                                      },\n                                      {\n                                        \"anonymous\": false,\n                                        \"inputs\": [\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"operator\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"from\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"address\",\n                                            \"name\": \"to\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"indexed\": false,\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"id\",\n                                            \"type\": \"uint256\"\n                                          },\n                                          {\n                                            \"indexed\": false,\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"value\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"name\": \"TransferSingle\",\n                                        \"type\": \"event\"\n                                      },\n                                      {\n                                        \"anonymous\": false,\n                                        \"inputs\": [\n                                          {\n                                            \"indexed\": false,\n                                            \"internalType\": \"string\",\n                                            \"name\": \"value\",\n                                            \"type\": \"string\"\n                                          },\n                                          {\n                                            \"indexed\": true,\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"id\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"name\": \"URI\",\n                                        \"type\": \"event\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"INTERFACE_ID_ERC1155\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint8\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint8\"\n                                          }\n                                        ],\n                                        \"name\": \"attributes\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"account\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"id\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"name\": \"balanceOf\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address[]\",\n                                            \"name\": \"accounts\",\n                                            \"type\": \"address[]\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256[]\",\n                                            \"name\": \"ids\",\n                                            \"type\": \"uint256[]\"\n                                          }\n                                        ],\n                                        \"name\": \"balanceOfBatch\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint256[]\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint256[]\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"newMetadataURI\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"name\": \"changeBaseMetadataURI\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"newMetadataURI\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"name\": \"changeImageURI\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"characters\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint8\",\n                                            \"name\": \"element\",\n                                            \"type\": \"uint8\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"exp\",\n                                            \"type\": \"uint256\"\n                                          },\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"metadataURI\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint8\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint8\"\n                                          }\n                                        ],\n                                        \"name\": \"elements\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"exp\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"name\": \"gainEXP\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"_userAddress\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"exp\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"name\": \"gainUserEXP\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"getAllPrimaryHolders\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string[]\",\n                                            \"name\": \"primaryTokenURIs\",\n                                            \"type\": \"string[]\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint8\",\n                                            \"name\": \"num\",\n                                            \"type\": \"uint8\"\n                                          }\n                                        ],\n                                        \"name\": \"getAttribute\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"getCurrentLevel\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"currentLevel\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"getCurrentStats\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"fire\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"water\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"air\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"earth\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"charisma\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"creativity\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"cunning\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"patience\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint8\",\n                                            \"name\": \"num\",\n                                            \"type\": \"uint8\"\n                                          }\n                                        ],\n                                        \"name\": \"getElement\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"getMetadata\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"getPrimaryStats\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"element\",\n                                            \"type\": \"string\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"level\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"exp\",\n                                            \"type\": \"uint256\"\n                                          },\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"metadataURI\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"_userAddress\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"getPrimaryTokenID\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"_tokenID\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"_userAddress\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"getPrimaryTokenURI\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"_tokenURI\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"_userAddress\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"getUserCurrentStats\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"fire\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"water\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"air\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"earth\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"charisma\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"creativity\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"cunning\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"patience\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"_userAddress\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"getUserPrimaryStats\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"element\",\n                                            \"type\": \"string\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"level\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"exp\",\n                                            \"type\": \"uint256\"\n                                          },\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"metadataURI\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"holderPrimaryTokens\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"account\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"operator\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"name\": \"isApprovedForAll\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"bool\",\n                                            \"name\": \"\",\n                                            \"type\": \"bool\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"_userAddress\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"metadataURI\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"name\": \"levelUp\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"metadataURI\",\n                                            \"type\": \"string\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint8\",\n                                            \"name\": \"element\",\n                                            \"type\": \"uint8\"\n                                          }\n                                        ],\n                                        \"name\": \"mint\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [],\n                                        \"name\": \"nftCounter\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"_value\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"primaryTokenHolderIndex\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"\",\n                                            \"type\": \"address\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"from\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"to\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256[]\",\n                                            \"name\": \"ids\",\n                                            \"type\": \"uint256[]\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256[]\",\n                                            \"name\": \"amounts\",\n                                            \"type\": \"uint256[]\"\n                                          },\n                                          {\n                                            \"internalType\": \"bytes\",\n                                            \"name\": \"data\",\n                                            \"type\": \"bytes\"\n                                          }\n                                        ],\n                                        \"name\": \"safeBatchTransferFrom\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"from\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"to\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"id\",\n                                            \"type\": \"uint256\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"amount\",\n                                            \"type\": \"uint256\"\n                                          },\n                                          {\n                                            \"internalType\": \"bytes\",\n                                            \"name\": \"data\",\n                                            \"type\": \"bytes\"\n                                          }\n                                        ],\n                                        \"name\": \"safeTransferFrom\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"operator\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"bool\",\n                                            \"name\": \"approved\",\n                                            \"type\": \"bool\"\n                                          }\n                                        ],\n                                        \"name\": \"setApprovalForAll\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"_metadata\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"name\": \"setMetadata\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"_userAddress\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"setPrimaryTokenID\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"bytes4\",\n                                            \"name\": \"interfaceId\",\n                                            \"type\": \"bytes4\"\n                                          }\n                                        ],\n                                        \"name\": \"supportsInterface\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"bool\",\n                                            \"name\": \"\",\n                                            \"type\": \"bool\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"name\": \"tokenMetadata\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"address\",\n                                            \"name\": \"\",\n                                            \"type\": \"address\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"name\": \"tokenOwners\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint16\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint16\",\n                                            \"name\": \"tokenID\",\n                                            \"type\": \"uint16\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint8\",\n                                            \"name\": \"element\",\n                                            \"type\": \"uint8\"\n                                          },\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"exp\",\n                                            \"type\": \"uint256\"\n                                          },\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"metadataURI\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"name\": \"updateCharacter\",\n                                        \"outputs\": [],\n                                        \"stateMutability\": \"nonpayable\",\n                                        \"type\": \"function\"\n                                      },\n                                      {\n                                        \"inputs\": [\n                                          {\n                                            \"internalType\": \"uint256\",\n                                            \"name\": \"\",\n                                            \"type\": \"uint256\"\n                                          }\n                                        ],\n                                        \"name\": \"uri\",\n                                        \"outputs\": [\n                                          {\n                                            \"internalType\": \"string\",\n                                            \"name\": \"\",\n                                            \"type\": \"string\"\n                                          }\n                                        ],\n                                        \"stateMutability\": \"view\",\n                                        \"type\": \"function\"\n                                      }\n                                    ]`,\n                                    'hyperspace': `[\n                                    {\n                                      \"inputs\": [],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"constructor\"\n                                    },\n                                    {\n                                      \"anonymous\": false,\n                                      \"inputs\": [\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"address\",\n                                          \"name\": \"account\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"address\",\n                                          \"name\": \"operator\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"indexed\": false,\n                                          \"internalType\": \"bool\",\n                                          \"name\": \"approved\",\n                                          \"type\": \"bool\"\n                                        }\n                                      ],\n                                      \"name\": \"ApprovalForAll\",\n                                      \"type\": \"event\"\n                                    },\n                                    {\n                                      \"anonymous\": false,\n                                      \"inputs\": [\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"address\",\n                                          \"name\": \"operator\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"address\",\n                                          \"name\": \"from\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"address\",\n                                          \"name\": \"to\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"indexed\": false,\n                                          \"internalType\": \"uint256[]\",\n                                          \"name\": \"ids\",\n                                          \"type\": \"uint256[]\"\n                                        },\n                                        {\n                                          \"indexed\": false,\n                                          \"internalType\": \"uint256[]\",\n                                          \"name\": \"values\",\n                                          \"type\": \"uint256[]\"\n                                        }\n                                      ],\n                                      \"name\": \"TransferBatch\",\n                                      \"type\": \"event\"\n                                    },\n                                    {\n                                      \"anonymous\": false,\n                                      \"inputs\": [\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"address\",\n                                          \"name\": \"operator\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"address\",\n                                          \"name\": \"from\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"address\",\n                                          \"name\": \"to\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"indexed\": false,\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"id\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"indexed\": false,\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"value\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"TransferSingle\",\n                                      \"type\": \"event\"\n                                    },\n                                    {\n                                      \"anonymous\": false,\n                                      \"inputs\": [\n                                        {\n                                          \"indexed\": false,\n                                          \"internalType\": \"string\",\n                                          \"name\": \"value\",\n                                          \"type\": \"string\"\n                                        },\n                                        {\n                                          \"indexed\": true,\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"id\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"URI\",\n                                      \"type\": \"event\"\n                                    },\n                                    {\n                                      \"inputs\": [],\n                                      \"name\": \"INTERFACE_ID_ERC1155\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"account\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"id\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"balanceOf\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address[]\",\n                                          \"name\": \"accounts\",\n                                          \"type\": \"address[]\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256[]\",\n                                          \"name\": \"ids\",\n                                          \"type\": \"uint256[]\"\n                                        }\n                                      ],\n                                      \"name\": \"balanceOfBatch\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256[]\",\n                                          \"name\": \"\",\n                                          \"type\": \"uint256[]\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"id\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"newImageURI\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"name\": \"changeImageURI\",\n                                      \"outputs\": [],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"characters\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"level\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"exp\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"creativity\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"cunning\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"charisma\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"patience\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"fire\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"water\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"air\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"earth\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"imageURI\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"_token_ID\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"getMetadata\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"_token_ID\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"getStats\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"id\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"level\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"exp\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"creativity\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"cunning\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"charisma\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"patience\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"fire\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"water\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"air\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"earth\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"_userAddress\",\n                                          \"type\": \"address\"\n                                        }\n                                      ],\n                                      \"name\": \"getUserMetadata\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"metadataURI\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"_userAddress\",\n                                          \"type\": \"address\"\n                                        }\n                                      ],\n                                      \"name\": \"getUserStats\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"id\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"level\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"exp\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"creativity\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"cunning\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"charisma\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"patience\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"fire\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"water\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"air\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"earth\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"_userAddress\",\n                                          \"type\": \"address\"\n                                        }\n                                      ],\n                                      \"name\": \"getUsertoken_ID\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"largesttoken_ID\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"account\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"operator\",\n                                          \"type\": \"address\"\n                                        }\n                                      ],\n                                      \"name\": \"isApprovedForAll\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"bool\",\n                                          \"name\": \"\",\n                                          \"type\": \"bool\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"_id\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"isNonFungible\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"bool\",\n                                          \"name\": \"\",\n                                          \"type\": \"bool\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"pure\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"_userAddress\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"imageURI\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"name\": \"levelUp\",\n                                      \"outputs\": [],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"fire\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"water\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"air\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"earth\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"imageURI\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"name\": \"mint\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [],\n                                      \"name\": \"nftCounter\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"_value\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"max\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"random\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"randomInt\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"from\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"to\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256[]\",\n                                          \"name\": \"ids\",\n                                          \"type\": \"uint256[]\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256[]\",\n                                          \"name\": \"amounts\",\n                                          \"type\": \"uint256[]\"\n                                        },\n                                        {\n                                          \"internalType\": \"bytes\",\n                                          \"name\": \"data\",\n                                          \"type\": \"bytes\"\n                                        }\n                                      ],\n                                      \"name\": \"safeBatchTransferFrom\",\n                                      \"outputs\": [],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"from\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"to\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"id\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"amount\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"bytes\",\n                                          \"name\": \"data\",\n                                          \"type\": \"bytes\"\n                                        }\n                                      ],\n                                      \"name\": \"safeTransferFrom\",\n                                      \"outputs\": [],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"operator\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"bool\",\n                                          \"name\": \"approved\",\n                                          \"type\": \"bool\"\n                                        }\n                                      ],\n                                      \"name\": \"setApprovalForAll\",\n                                      \"outputs\": [],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"_token_ID\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"_metadata\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"name\": \"setMetadata\",\n                                      \"outputs\": [],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"bytes4\",\n                                          \"name\": \"interfaceId\",\n                                          \"type\": \"bytes4\"\n                                        }\n                                      ],\n                                      \"name\": \"supportsInterface\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"bool\",\n                                          \"name\": \"\",\n                                          \"type\": \"bool\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"tokenMetadata\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"address\",\n                                          \"name\": \"\",\n                                          \"type\": \"address\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"tokenOwners\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"id\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"level\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"exp\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"creativity\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"cunning\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"charisma\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"patience\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"fire\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"water\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"air\",\n                                          \"type\": \"uint256\"\n                                        },\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"earth\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"updateCharacter\",\n                                      \"outputs\": [],\n                                      \"stateMutability\": \"nonpayable\",\n                                      \"type\": \"function\"\n                                    },\n                                    {\n                                      \"inputs\": [\n                                        {\n                                          \"internalType\": \"uint256\",\n                                          \"name\": \"\",\n                                          \"type\": \"uint256\"\n                                        }\n                                      ],\n                                      \"name\": \"URI\",\n                                      \"outputs\": [\n                                        {\n                                          \"internalType\": \"string\",\n                                          \"name\": \"\",\n                                          \"type\": \"string\"\n                                        }\n                                      ],\n                                      \"stateMutability\": \"view\",\n                                      \"type\": \"function\"\n                                    }\n                                    ]`\n                                },\n                      'default': {'goerli': `[\n                        {\n                          \"inputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"constructor\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"owner\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"approved\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"Approval\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"owner\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"operator\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"bool\",\n                              \"name\": \"approved\",\n                              \"type\": \"bool\"\n                            }\n                          ],\n                          \"name\": \"ApprovalForAll\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"_fromTokenId\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"_toTokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"BatchMetadataUpdate\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"_tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"MetadataUpdate\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"previousOwner\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"newOwner\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"OwnershipTransferred\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"PrimaryTokenAssigned\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_timestamp\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"address\",\n                              \"name\": \"completer_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"TaskCompleted\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_count\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"string\",\n                              \"name\": \"task_metadata_URI\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            }\n                          ],\n                          \"name\": \"TaskCreated\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"from\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"Transfer\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint16\",\n                              \"name\": \"whitelist_tier\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"WhitelistAssigned\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"task_metadata_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"__createTask\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"token_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"__mintFree\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"new_collectionInfoURI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"__setContractURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"old_collectionInfoURI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"new_price\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"whitelist_tier\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"__setMintPrice\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"old_price\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"__setPrimaryTokenID\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"token_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"__setTokenURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"old_token_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"_maxSupply\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"approve\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"owner\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"balanceOf\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"characters\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"metadata_URI\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tasks_completed\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"collectionInfoURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"completeTask\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"contractURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"getApproved\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"whitelist_tier\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"getMintPrice\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"index\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"getPrimaryHolderByIndex\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"getPrimaryHolderCount\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"getPrimaryTokenID\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"getPrimaryTokenURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"_tokenURI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"getWhitelistTier\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"holderPrimaryTokens\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"owner\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"operator\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"isApprovedForAll\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"bool\",\n                              \"name\": \"\",\n                              \"type\": \"bool\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"token_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"mint\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"payable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"mint_limits\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"mint_prices\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"name\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"owner\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"ownerOf\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"primaryTokenHolderIndex\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"renounceOwnership\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"from\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"safeTransferFrom\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"from\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"bytes\",\n                              \"name\": \"data\",\n                              \"type\": \"bytes\"\n                            }\n                          ],\n                          \"name\": \"safeTransferFrom\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"operator\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"bool\",\n                              \"name\": \"approved\",\n                              \"type\": \"bool\"\n                            }\n                          ],\n                          \"name\": \"setApprovalForAll\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"setPrimaryTokenID\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"bytes4\",\n                              \"name\": \"interfaceId\",\n                              \"type\": \"bytes4\"\n                            }\n                          ],\n                          \"name\": \"supportsInterface\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"bool\",\n                              \"name\": \"\",\n                              \"type\": \"bool\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"symbol\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"\",\n                              \"type\": \"bytes32\"\n                            }\n                          ],\n                          \"name\": \"taskHashArray\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"tasks\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"metadata_URI\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_creation_timestamp\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"task_creator_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"tokenURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"from\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"transferFrom\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"newOwner\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"transferOwnership\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"whitelist_tiers\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        }\n                      ]`},\n                      'Signatures': {'goerli': `[\n                        {\n                          \"inputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"constructor\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"owner\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"approved\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"Approval\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"owner\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"operator\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"bool\",\n                              \"name\": \"approved\",\n                              \"type\": \"bool\"\n                            }\n                          ],\n                          \"name\": \"ApprovalForAll\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"_fromTokenId\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"_toTokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"BatchMetadataUpdate\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"_tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"MetadataUpdate\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"previousOwner\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"newOwner\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"OwnershipTransferred\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"PrimaryTokenAssigned\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_timestamp\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"address\",\n                              \"name\": \"completer_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"TaskCompleted\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_count\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"string\",\n                              \"name\": \"task_metadata_URI\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            }\n                          ],\n                          \"name\": \"TaskCreated\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"from\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": true,\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"Transfer\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"anonymous\": false,\n                          \"inputs\": [\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"indexed\": false,\n                              \"internalType\": \"uint16\",\n                              \"name\": \"whitelist_tier\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"WhitelistAssigned\",\n                          \"type\": \"event\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"task_metadata_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"__createTask\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"token_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"__mintFree\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"new_collectionInfoURI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"__setContractURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"old_collectionInfoURI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"new_price\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"whitelist_tier\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"__setMintPrice\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"old_price\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"__setPrimaryTokenID\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"token_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"__setTokenURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"old_token_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"_maxSupply\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"approve\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"owner\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"balanceOf\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"characters\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"metadata_URI\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tasks_completed\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"collectionInfoURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"completeTask\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            }\n                          ],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"contractURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"getApproved\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"whitelist_tier\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"getMintPrice\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"index\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"getPrimaryHolderByIndex\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"getPrimaryHolderCount\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"getPrimaryTokenID\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"getPrimaryTokenURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"_tokenURI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"user_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"getWhitelistTier\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"holderPrimaryTokens\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"owner\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"operator\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"isApprovedForAll\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"bool\",\n                              \"name\": \"\",\n                              \"type\": \"bool\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"token_URI\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"name\": \"mint\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"payable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"mint_limits\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"name\": \"mint_prices\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"name\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"owner\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"ownerOf\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"primaryTokenHolderIndex\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"renounceOwnership\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"from\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"safeTransferFrom\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"from\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"bytes\",\n                              \"name\": \"data\",\n                              \"type\": \"bytes\"\n                            }\n                          ],\n                          \"name\": \"safeTransferFrom\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"operator\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"bool\",\n                              \"name\": \"approved\",\n                              \"type\": \"bool\"\n                            }\n                          ],\n                          \"name\": \"setApprovalForAll\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"token_ID\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"setPrimaryTokenID\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"bytes4\",\n                              \"name\": \"interfaceId\",\n                              \"type\": \"bytes4\"\n                            }\n                          ],\n                          \"name\": \"supportsInterface\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"bool\",\n                              \"name\": \"\",\n                              \"type\": \"bool\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [],\n                          \"name\": \"symbol\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"\",\n                              \"type\": \"bytes32\"\n                            }\n                          ],\n                          \"name\": \"taskHashArray\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"tasks\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"metadata_URI\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_ID\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"task_tags\",\n                              \"type\": \"string\"\n                            },\n                            {\n                              \"internalType\": \"bytes32\",\n                              \"name\": \"task_hash\",\n                              \"type\": \"bytes32\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"task_creation_timestamp\",\n                              \"type\": \"uint256\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"task_creator_address\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"tokenURI\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"string\",\n                              \"name\": \"\",\n                              \"type\": \"string\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"from\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"to\",\n                              \"type\": \"address\"\n                            },\n                            {\n                              \"internalType\": \"uint256\",\n                              \"name\": \"tokenId\",\n                              \"type\": \"uint256\"\n                            }\n                          ],\n                          \"name\": \"transferFrom\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"newOwner\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"transferOwnership\",\n                          \"outputs\": [],\n                          \"stateMutability\": \"nonpayable\",\n                          \"type\": \"function\"\n                        },\n                        {\n                          \"inputs\": [\n                            {\n                              \"internalType\": \"address\",\n                              \"name\": \"\",\n                              \"type\": \"address\"\n                            }\n                          ],\n                          \"name\": \"whitelist_tiers\",\n                          \"outputs\": [\n                            {\n                              \"internalType\": \"uint16\",\n                              \"name\": \"\",\n                              \"type\": \"uint16\"\n                            }\n                          ],\n                          \"stateMutability\": \"view\",\n                          \"type\": \"function\"\n                        }\n                      ]`}};\n\n// *Update metadata URIs with your IPFS files' information\nconst folder_URIs = {\n  NFT_Storage: 'bafybeiglxxim4fc4jxl53kxoxjsnrf7efcabx4jikrgrz2ralmgqlj6yai',\n  Pinata: 'QmcvaEQrzwiNjDZzJX1jBq5zDtvF9yc2Le6nyjquABEGmh',\n  Pinata_old: 'QmPF4nrDbTnGk2UWduZDw2FCHZcF6HJicYDdsDAkEqJgH7'};\n\nconst JSON_URIs = {\n  NFT_Storage: {0:'/LMNTLfire1.json',\n                1:'/LMNTLwater1.json',\n                2:'/LMNTLair1.json',\n                3:'/LMNTLearth1.json',\n                4:'/LMNTLfire2.json',\n                5:'/LMNTLwater2.json',\n                6:'/LMNTLair2.json',\n                7:'/LMNTLearth2.json',\n                background_list: \"bafybeicc2gguyju7625a3c6ie2gyukggwhgcle64a73bo4yxrtrr6zf2fi/background_list.json\",\n                pac_list: \"bafybeigmgu2k25bxwjmwxwrr2kwiwzzjpuy3mzew2yochngedqof5zgmu4/pac_list.json\"},\n  Pinata: {0:'/LMNTLfire1.json',\n           1:'/LMNTLwater1.json',\n           2:'/LMNTLair1.json',\n           3:'/LMNTLearth1.json',\n           4:'/LMNTLfire2.json',\n           5:'/LMNTLwater2.json',\n           6:'/LMNTLair2.json',\n           7:'/LMNTLearth2.json'},\n  Pinata_old: {0:'/LMNTLfire1.png',\n           1:'/LMNTLwater1.png',\n           2:'/LMNTLair1.png',\n           3:'/LMNTLearth1.png',\n           4:'/LMNTLfire2.png',\n           5:'/LMNTLwater2.png',\n           6:'/LMNTLair2.png',\n           7:'/LMNTLearth2.png'}};\n\nconst network_IPFS_dict = {'mainnet': 'Pinata',\n                           'goerli': 'NFT_Storage',\n                           'hyperspace': 'NFT_Storage',\n                           'sepolia': 'NFT_Storage'};\n\nconst IPFS_prefixes = {\n  Pinata: 'https://gateway.pinata.cloud/ipfs/',\n  Pinata_old: 'https://gateway.pinata.cloud/ipfs/',\n  Infura: '',\n  NFT_Storage: 'https://nftstorage.link/ipfs/'\n};\n\nconst network_dict = {'goerli': {},\n                      'polygon': {},\n                      'sepolia': {}};\n\nconst opensea_link_delay = 8;\nconst opensea_prefixes = {\n  'mainnet': 'https://opensea.io/assets/ethereum/',\n  'goerli': 'https://testnets.opensea.io/assets/goerli/', \n  'hyperspace': ''\n};\n\n// These variables are set as Context variables to be accessed by other components\nvar user_address, user_token_ID, user_metadata_URI, user_metadata, user_avatar_URI, user_balance, contract_name;\n\nvar provider, signer, user_web_wallet;\n\nconst default_network = 'sepolia';\nvar network_name = default_network;\n\nvar user_minted_NFT = false;\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Basic Functions\n\n//const [address, toggleConnected] = useState(0);\n//const [isMinted, toggleMinted] = useState(0);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n\nfunction pause(time) {\n  return new Promise(resolve => setTimeout(resolve, time));\n}\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Wallet & Metadata Functions\n\nif (run_on_load) {\n  onLoad();\n};\nasync function onLoad () {\n  if (run_on_load) {\n    run_on_load = false;\n    await connectWallet();\n    contract_dict['Signatures']['Functions'] = await parseABI(contract_dict['Signatures']['ABI']);\n    console.log(\"Functions:\", contract_dict['Signatures']['Functions']);\n    \n  }\n}\n\n\nasync function setProvider() {\n  provider = new ethers.providers.Web3Provider(window.ethereum);\n  console.log('Provider: ', provider);\n  user_web_wallet = provider['connection']['url'];\n  console.log('Web Wallet: ', user_web_wallet);\n  if ('_network' in provider) {\n    network_name = provider['_network']['name'];\n    console.log('Network: ', network_name);\n  };\n  return(provider);\n};\n\n\nasync function setSigner(provider_input) {\n  if (!provider_input) {\n    provider_input = provider;\n  };\n  if (!provider_input) {\n    provider_input = await setProvider();\n  };\n  // Prompt user for account connections\n  await provider_input.send(\"eth_requestAccounts\", []);\n  signer = await provider_input.getSigner();\n  console.log('Signer: ', signer);\n  return(signer);\n};\n\n\nasync function setUserAddress(signer_input) {\n  if (!signer_input) {\n    signer_input = signer;\n  };\n  if (!signer_input) {\n    signer_input = await setSigner();\n  };\n  user_address = await signer_input.getAddress();\n  console.log('Address: ', user_address);\n  return(user_address);\n}\n\n\nasync function setUserBalance(signer_input) {\n  if (!signer_input) {\n    signer_input = signer;\n  };\n  if (!signer_input) {\n    signer_input = await setSigner();\n  };\n  user_balance = await signer_input.getBalance();\n  user_balance = ethers.utils.formatEther(user_balance);\n  console.log('Balance: ', user_balance);\n  return user_balance;\n};\n\n\nexport async function setUserTokenID(contract_name_input, address_input) {\n  // Set user address\n  if (!address_input) {\n    address_input = user_address;\n  };\n  if (!address_input) {\n    address_input = await setUserAddress();\n  };\n\n  // Set contract name\n  if (!contract_name_input) {\n    contract_name_input = contract_name;\n  };\n  if (!contract_name_input) {\n    contract_name_input = default_contract_name;\n  };\n\n  const contract = new ethers.Contract(contract_dict[contract_name_input]['Address'][network_name], contract_dict[contract_name_input]['ABI'], provider);\n  user_token_ID = await contract.getPrimaryTokenID(address_input);\n  console.log('User Token ID: ', user_token_ID);\n  return user_token_ID;\n};\n\n\nexport async function setUserMetadata(contract_name_input, address_input) {\n  // Set user address\n  if (!address_input) {\n    address_input = user_address;\n  };\n  if (!address_input) {\n    address_input = await setUserAddress();\n  };\n\n  // Set contract name\n  if (!contract_name_input) {\n    contract_name_input = contract_name;\n  };\n  if (!contract_name_input) {\n    contract_name_input = default_contract_name;\n  };\n\n  const contract = new ethers.Contract(contract_dict[contract_name_input]['Address'][network_name], contract_dict[contract_name_input]['ABI'], provider);\n  user_metadata_URI = await contract.getPrimaryTokenURI(address_input);\n  if (user_metadata_URI.includes('.json')) {\n    try {\n      const response = await fetch(user_metadata_URI);\n      user_metadata = await response.json();\n      user_metadata['URI'] = user_metadata_URI;\n      console.log('User Metadata: ', user_metadata);\n      return user_metadata;\n    } catch(error) {\n      console.log('setUserMetadata Error:', error.message);\n    };\n  } else {\n    return user_metadata_URI;\n  };\n};\n\n\nexport async function setUserAvatarURI(metadata_input) {\n  if (!metadata_input) {\n    metadata_input = user_metadata;\n  };\n  if (!metadata_input) {\n    metadata_input = await setUserMetadata();\n  };\n  if (typeof(metadata_input) === 'string') {\n    user_avatar_URI = metadata_input;\n  } else {\n    user_avatar_URI = metadata_input['image'];\n  }\n  console.log('User Avatar URI: ', user_avatar_URI);\n  return user_avatar_URI;\n};\n\n\nexport async function getMetadataURI(metadata_info) {\n  if (!network_name) {\n    network_name = getNetwork();\n  }\n  var metadata_URI;\n  const IPFS_name = network_IPFS_dict[network_name];\n\n  // Pre-set Image URI\n  if (JSON_URIs[IPFS_name][metadata_info]) {\n    metadata_URI = IPFS_prefixes[IPFS_name] + folder_URIs[IPFS_name] + JSON_URIs[IPFS_name][metadata_info];\n  } else {\n    metadata_URI = IPFS_prefixes[IPFS_name] + metadata_info;\n  };\n  return metadata_URI;\n};\n\nexport async function getOpenSeaLink(contract_name_input, token_ID_input) {\n  if (!token_ID_input) {\n    token_ID_input = user_token_ID;\n  };\n  if (!token_ID_input) {\n    token_ID_input = await setUserTokenID(contract_name_input);\n  };\n\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n  } else {\n    contract_address = contract_name_input;\n  };\n\n  var opensea_link = opensea_prefixes[network_name] + contract_address + '/' + token_ID_input;\n  console.log('OpenSea Link: ', opensea_link);\n  return opensea_link;\n}\n\n\nexport async function getNetwork() {\n  if (!network_name) {\n    provider = await setProvider();\n    if ('_network' in provider) {\n      network_name = provider['_network']['name'];\n    };\n  };\n  console.log('Network Name: ', network_name);\n  return network_name;\n}\n\nexport async function getJSONfromIPFS(metadata_URI_input) {\n  console.log('\\nSmartContractOperator >>> RUNNING getJSONfromIPFS()');\n  if (metadata_URI_input) {\n    console.log(\"metadata_URI_input:\", metadata_URI_input);\n    var metadata_URI;\n    if (!metadata_URI_input.includes('http')) {\n      metadata_URI = getMetadataURI(metadata_URI_input);\n    } else {\n      metadata_URI = metadata_URI_input;\n    };\n    const response = await fetch(metadata_URI);\n    const JSON_contents = await response.json();\n    console.log('JSON Contents: ', JSON_contents);\n    return JSON_contents;\n  } else {\n    console.log('No metadata URI input!')\n  };\n};\n\n\nasync function getContractInfo(contract_name_input) {\n  const shit = 'balls';\n  //return({contract_address, contract_functions with number of inputs})\n}\n\n\nasync function promptNetworkSwitch (network_name_input) {\n  //if (!network_name_input || !network_dict.includes(network_name_input)) {\n  //  network_name_input = default_network;\n  //};\n  var network_switched = false;\n  if (network_name_input === 'polygon' || network_name_input === 'matic') {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: \"0x89\" }],\n    });\n    network_switched = true;\n  } else if (network_name_input === 'goerli') {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: \"0x5\" }],\n    });\n    network_switched = true;\n  }\n\n  if (network_switched) {\n    network_name = network_name_input;\n    network_switched = false;\n    window.location.reload();\n  }\n};\n\n\nexport async function promptAddNetwork(network_name_input) {\n  //if (!network_name_input || !network_dict.includes(network_name_input)) {\n  //  network_name_input = default_network;\n  //};\n  if (network_name_input === 'polygon' || network_name_input === 'matic') {\n    window.ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [{\n          chainId: \"0x89\",\n          rpcUrls: [\"https://rpc-mainnet.matic.network/\"],\n          chainName: \"Matic Mainnet\",\n          nativeCurrency: {\n              name: \"MATIC\",\n              symbol: \"MATIC\",\n              decimals: 18\n          },\n          blockExplorerUrls: [\"https://polygonscan.com/\"]\n      }]\n    });\n  };\n  network_name = network_name_input;\n  return network_name;\n};\n\n// changed from \"export default\" to just \"export\" because SmartContractOperator fails to export the function with \"default\" present\nexport async function connectWallet(network_name_input) {\n  //contract_name = contract_name_input;\n  provider = await setProvider();\n  signer = await setSigner(provider);\n  user_address = await setUserAddress(signer);\n  user_balance = await setUserBalance(signer);\n  if ('_network' in provider) {\n    network_name = provider['_network']['name'];\n    console.log('Network: ', network_name);\n  };\n  if (network_name_input && (network_name !== network_name_input)) {\n    console.log('PROMPTED Network Switch to: ', network_name_input);\n    promptNetworkSwitch(network_name_input);\n  };\n  //const contract = new ethers.Contract(contract_address_dict[network_name], json_ABI_list[network_name], provider);\n  //user_token_ID = await setUserTokenID(contract_name, user_address);\n  //user_metadata = await setUserMetadata(contract_name, user_address);\n  //user_avatar_URI = await setUserAvatarURI(user_metadata);\n  return({'address': user_address,\n          'network_name': network_name,\n          //'token_ID': user_token_ID,\n          'balance': user_balance});\n          //'metadata': user_metadata,\n          //'avatar_URI': user_avatar_URI,\n          //'contract_name': contract_name});\n};\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Smart Contract Functions\n\n\nasync function parseABI(ABI) {\n  const functions = {};\n\n  // Iterate through each ABI entry\n  for (const entry of ABI) {\n      if (entry.type === 'function') {\n          const inputs = entry.inputs.map(input => input.name); // Extract input parameter names\n          functions[entry.name] = inputs; // Store function name and input parameter names\n      }\n  }\n\n  return functions;\n};\n\n\n//Should take contract address\nexport async function runContractFunction(contract_name_input, function_name, function_params=[], button_text_object=false ) {\n  console.log('Contract Name: ', contract_name_input);\n  console.log('Function Name: ', function_name);\n  console.log('Function Params: ', function_params);\n  console.log('Mint Button: ', button_text_object);\n\n  // Assigns the preset contract address if it exists\n  // If not, `contract_name_input` is assumed to be the address itself\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n    contract_name = contract_name_input;\n  } else {\n    contract_address = contract_name_input;\n    contract_name = '';\n  };\n\n  console.log('Contract Address:', contract_address);\n  \n  if (!signer) {\n    signer = await setSigner();\n  };\n\n  console.log('address', signer._address);\n\n  const iface = new Interface(contract_dict[contract_name_input]['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_address, iface, signer);\n  var transaction_info;\n  if (function_name === 'mint') {\n    transaction_info = await contract.mint(function_params[0], { value: ethers.utils.parseUnits(\".000000000000005\", \"ether\") });\n    user_minted_NFT = true;\n  } else if (function_name === '__mintFree') {\n    transaction_info = await contract.__mintFree(function_params[0]);\n    user_minted_NFT = true;\n  } else if (function_name === 'contractURI') {\n    transaction_info = await contract.contractURI();\n  } else if (function_name === '__setContractURI') {\n    transaction_info = await contract.__setContractURI(function_params[0]);\n  } else if (function_name === 'getMintPrice') {\n    transaction_info = await contract.getMintPrice(function_params[0]);\n  } else if (function_name === '__setMintPrice') {\n    transaction_info = await contract.__setMintPrice(function_params[0], function_params[1]);\n  } else if (function_name === 'getMaxSupply') {\n    transaction_info = await contract.getMaxSupply();\n  } else if (function_name === '__setMaxSupply') {\n    transaction_info = await contract.__setMaxSupply(function_params[0]);\n  } else if (function_name === 'tokenURI') {\n    transaction_info = await contract.tokenURI(function_params[0]);\n  } else if (function_name === '__setTokenURI') {\n    transaction_info = await contract.__setTokenURI(function_params[0], function_params[1]);\n  } else if (function_name === 'getPrimaryTokenID') {\n    transaction_info = await contract.getPrimaryTokenID(function_params[0]);\n  } else if (function_name === 'setPrimaryTokenID') {\n    transaction_info = await contract.setPrimaryTokenID(function_params[0]);\n  } else if (function_name === 'getPrimaryTokenURI') {\n    transaction_info = await contract.getPrimaryTokenURI(function_params[0]);\n  } else if (function_name === 'getPrimaryHolderByIndex') {\n    transaction_info = await contract.getPrimaryHolderByIndex(function_params[0]);\n  } else if (function_name === 'getPrimaryHolderCount') {\n    transaction_info = await contract.getPrimaryHolderCount();\n  } else if (function_name === 'getAllPrimaryHolders') {\n    transaction_info = await contract.getAllPrimaryHolders();\n  } else if (function_name === '__createTask') {\n    transaction_info = await contract.__createTask(function_params[0], function_params[1], function_params[2]);\n  } else if (function_name === 'getTaskHash') {\n    transaction_info = await contract.getTaskHash(function_params[0], function_params[1]);\n  } else if (function_name === 'getTask') {\n    transaction_info = await contract.getTask(function_params[0], function_params[1]);\n  } else if (function_name === 'getCharacter') {\n    transaction_info = await contract.getCharacter(function_params[0]);\n  } else if (function_name === 'completeTask') {\n    transaction_info = await contract.completeTask(function_params[0], function_params[1]);\n  } else if (function_name === 'completeTaskBatch') {\n    transaction_info = await contract.completeTaskBatch(function_params[0], function_params[1]);\n  } else if (function_name === 'setApprovalForAll') {\n    transaction_info = await contract.setApprovalForAll(function_params[0], function_params[1]);\n  };\n  console.log(\"Transaction info: \", transaction_info);\n  \n  var transaction_hash = transaction_info.hash;\n  console.log(\"Transaction hash: \", transaction_hash);\n\n  if (transaction_hash) {\n    var transaction_receipt = await provider.getTransactionReceipt(transaction_hash);\n    console.log(\"Immediate transaction receipt: \", transaction_receipt);\n\n    // Button updated & code paused via while loop while awaiting contract execution\n    if (button_text_object) {\n      button_text_object.textContent = \"Executing\";\n      var loop_count = 1;\n      while ( !transaction_receipt ) {\n        await pause(500);\n        if (loop_count > 3) {\n          button_text_object.textContent = \"Executing\";\n          loop_count = 0;\n        } else {\n          button_text_object.insertAdjacentText('beforeEnd', '.');\n        }\n        transaction_receipt = await provider.getTransactionReceipt(transaction_hash);\n        loop_count+=1;\n      }\n      console.log(\"Mined transaction receipt: \", transaction_receipt);\n\n      // Button updated & code paused via while loop for duration of opensea_link_delay\n      var wait_count = 0;\n      while ( wait_count < (2 * opensea_link_delay) ) {\n        await pause(500);\n        if (loop_count > 3) {\n          button_text_object.textContent = \"Executing\";\n          loop_count = 0;\n        } else {\n          button_text_object.insertAdjacentText('beforeEnd', '.');\n        }\n        loop_count+=1;\n        wait_count+=1;\n      }\n      button_text_object.textContent = \"Executed!\";\n    }\n  }\n\n  \n\n  //user_token_ID = parseInt(transaction_receipt.logs[0].topics[3], 10);\n  //console.log(\"User Token ID: \", user_token_ID);\n  //console.log(\"Unparsed User Token ID: \", transaction_receipt.logs[0].topics[3]);\n\n  console.log(\"Transaction Info: \", transaction_info);\n  return transaction_info;  \n}\n\n\n\n\n\n\n\n//Should take contract address\nexport async function mintNFT(contract_name_input, mint_button, params) {\n  console.log('Mint Contract Name: ', contract_name_input);\n  console.log('Mint Params: ', params);\n  console.log('Mint Button: ', mint_button);\n\n  // Assigns the preset contract address if it exists\n  // If not, `contract_name_input` is assumed to be the address itself\n  var contract_address;\n  if (contract_dict[contract_name_input]) {\n    contract_address = contract_dict[contract_name_input]['Address'][network_name];\n  } else {\n    contract_address = contract_name_input;\n  };\n\n  console.log('Contract Address:', contract_address);\n  \n  if (!signer) {\n    signer = await setSigner();\n  };\n  const iface = new Interface(contract_dict[contract_name_input]['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_address, iface, signer);\n  var transactionInfo;\n  \n\n  if (params.length === 0) {\n    transactionInfo = await contract.mint();\n  } else if (params.length === 1) {\n    transactionInfo = await contract.mint(params[0]);\n  } else if (params.length === 2) {\n    transactionInfo = await contract.mint(params[0], params[1]);\n  } else if (params.length === 3) {\n    transactionInfo = await contract.mint(params[0], params[1], params[2]);\n  } else if (params.length === 4) {\n    transactionInfo = await contract.mint(params[0], params[1], params[2], params[3]);\n  } else {\n    transactionInfo = await contract.mint(params[0], params[1], params[2], params[3], params[4]);\n  };\n  user_minted_NFT = true;\n  console.log(\"Transaction info: \", transactionInfo);\n  \n  var transactionHash = transactionInfo.hash;\n  console.log(\"Transaction hash: \", transactionHash);\n\n  var transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n  console.log(\"Immediate transaction receipt: \", transactionReceipt);\n\n  // Button updated & code paused via while loop while awaiting contract execution\n  mint_button.textContent = \"Minting\";\n  var loop_count = 1;\n  while ( !transactionReceipt ) {\n    await pause(500);\n    if (loop_count > 3) {\n      mint_button.textContent = \"Minting\";\n      loop_count = 0;\n    } else {\n      mint_button.insertAdjacentText('beforeEnd', '.');\n    }\n    transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n    loop_count+=1;\n  }\n  console.log(\"Mined transaction receipt: \", transactionReceipt);\n\n  // Button updated & code paused via while loop for duration of opensea_link_delay\n  var wait_count = 0;\n  while ( wait_count < (2 * opensea_link_delay) ) {\n    await pause(500);\n    if (loop_count > 3) {\n      mint_button.textContent = \"Minting\";\n      loop_count = 0;\n    } else {\n      mint_button.insertAdjacentText('beforeEnd', '.');\n    }\n    loop_count+=1;\n    wait_count+=1;\n  }\n  console.log(\"Transaction Info: \", transactionInfo);\n\n  user_token_ID = parseInt(transactionReceipt.logs[0].topics[3], 10);\n  console.log(\"User Token ID: \", user_token_ID);\n  console.log(\"Unparsed User Token ID: \", transactionReceipt.logs[0].topics[3]);\n  return user_token_ID;  \n}\n\n\n\n\n\n  \n  \n//--------------------------------------------------------------------------------------------------\n//# Optional Dev Page Functions for Testing\n\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Custom Smart Contract Calls\n// *Update this section with your smart contract's custom function calls\n\nexport async function getUserStats(address_input) {\n  if (!address_input) {\n    address_input = user_address;\n  };\n  if (!address_input) {\n    address_input = await setUserAddress();\n  };\n  const contract = new ethers.Contract(contract_dict['LMNTL']['Address'][network_name], contract_dict['LMNTL']['ABI'], provider);\n  user_token_ID = await contract.getPrimaryTokenID(address_input);\n  const user_primary_stats = await contract.getUserPrimaryStats(address_input);\n  console.log('User Primary Stats: ', user_primary_stats);\n  const user_stats_list = await contract.getUserCurrentStats(address_input);\n  const user_stats_dict = {\n    user_token_ID: user_token_ID,\n    user_primary_stats: user_primary_stats,\n    user_stats_list: user_stats_list\n  };\n  console.log('User Stats: ', user_stats_dict);\n  return user_stats_dict;\n}\n\n\nexport async function levelUp(level_up_button) {\n  if (!user_metadata_URI) {\n    user_metadata = await setUserMetadata();\n  };\n  const iface = new Interface(contract_dict['LMNTL']['ABI']);\n  iface.format(FormatTypes.full);\n  const contract = new ethers.Contract(contract_dict['LMNTL']['Address'][network_name], iface, signer);\n\n  const old_metadata_base_address = user_metadata_URI.split('LMNTL')[0];\n  const old_metadata_filename = 'LMNTL' + user_metadata_URI.split('LMNTL')[1];\n\n  var new_metadata_URI;\n\n  if (network_IPFS_dict[network_name] === 'Pinata_old') {\n    new_metadata_URI = old_metadata_base_address + old_metadata_filename.substring(0, old_metadata_filename.length - 5) + \"2.png\";\n  } else {\n    new_metadata_URI = old_metadata_base_address + old_metadata_filename.substring(0, old_metadata_filename.length - 6) + \"2.json\";\n  };\n  console.log('New Metadata URI: ', new_metadata_URI);\n  const transactionInfo = await contract.levelUp(user_address, new_metadata_URI);\n\n  console.log(\"Transaction info: \", transactionInfo);\n  var transactionHash = transactionInfo.hash;\n  console.log(\"Transaction hash: \", transactionHash);\n  var transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n  console.log(\"Immediate transaction receipt: \", transactionReceipt);\n  level_up_button.textContent = \"Evolving\";\n  var loop_count = 1;\n  while ( !transactionReceipt ) {\n    await pause(500);\n    if (loop_count > 3) {\n      level_up_button.textContent = \"Evolving\";\n      loop_count = 0;\n    } else {\n      level_up_button.insertAdjacentText('beforeEnd', '.');\n    }\n    transactionReceipt = await provider.getTransactionReceipt(transactionHash);\n    loop_count+=1;\n  }\n\n  console.log(\"Mined transaction receipt: \", transactionReceipt);\n  console.log(\"Transaction Info: \", transactionInfo);\n\n  const response = await fetch(new_metadata_URI);\n  user_metadata_URI = new_metadata_URI;\n  user_metadata = await response.json();\n  user_avatar_URI = await setUserAvatarURI(user_metadata);\n  return({'metadata': user_metadata,\n          'avatar_URI': user_avatar_URI}); \n};","export default __webpack_public_path__ + \"static/media/EXP_plus_5.7ef89b0c.gif\";","export default __webpack_public_path__ + \"static/media/EXP_plus_10.cd8d1cc1.gif\";","export default __webpack_public_path__ + \"static/media/TAP_plus_3.bb9c9a3b.gif\";","//--------------------------------------------------------------------------------------------------\n//# Imports\n\nimport React, { useState, useContext, useEffect } from 'react'\nimport SmartContractContext from '../../scripts/SmartContractContext';\nimport {connectWallet, runContractFunction, getJSONfromIPFS, setUserTokenID, setUserMetadata, setUserAvatarURI} from '../../scripts/SmartContractOperator';\nimport Aos from \"aos\";\nimport \"aos/dist/aos.css\";\n\nimport EXP_plus_5 from '../../image/animations/exp/EXP_plus_5.gif'\nimport EXP_plus_10 from '../../image/animations/exp/EXP_plus_10.gif'\n\nimport TAP_plus_3 from '../../image/animations/TAP_plus_3.gif'\n\nimport logo from '../../image/logo.png'\nimport clickToOpen from '../../image/click_to_open_button.png'\nimport melioraComicCover from '../../image/meliora_comic_cover.png'\n\nimport './gamegui.css'\n\n\n\n\n\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# Variables\n\n\nconst connect_on_load = false;\n\nvar network_name = 'sepolia';\nvar user_wallet_info;\nvar game_loaded = false;\n\n\nvar scene_dict = {};\n\n// var current_time = await getDateTime();\n\n// let player_ledger = [\n//                       {\"world\": \"Meliora\",\n//                        \"game\": \"The Birth of Meliora\",\n//                        \"scene\": \"\",\n//                        \"element\": \"\",\n//                        \"time\": current_time}\n//                     ];\n\nlet player_leder = [];\n\nconst EXP_animation_dict = {5: EXP_plus_5,\n                            10: EXP_plus_10};\n\nconst TAP_animation_dict = {3: TAP_plus_3};\n\nconst animation_dict = {\"EXP\": {5: EXP_plus_5,\n                                10: EXP_plus_10},\n                        \"TAP\": {3: TAP_plus_3}};\n\nvar current_world = \"Meliora\";\nvar current_game = \"The Birth of Meliora\";\nvar current_scene = 0;\nvar current_time;\nvar background_image = melioraComicCover;\nvar element_1_image;\nvar element_2_image;\nvar element_3_image;\n// var element_4;\n// var element_5;\n// var element_6;\n// var element_7;\n// var element_8;\n// var element_9;\n\nvar element_1_coordinates;\nvar element_2_coordinates;\nvar element_3_coordinates;\n\n\nvar mobile_device = false;\nif( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n  console.log(\"Mobile device detected\");\n  mobile_device = true;\n};\n\nvar vertical_display = false;\nif (window.screen.width < window.screen.height) {\n  console.log(\"Vertical screen detected\");\n  vertical_display = true;\n  console.log(\"window.screen.width: \", window.screen.width);\n  console.log(\"window.screen.height: \", window.screen.height);\n};\n\nvar rotate_game = false;\n\n\n//AppStart\nconst GameGUI = () => {\n\n\nlet { user_address, setAddress_Context } = useContext(SmartContractContext);\nlet { user_token_ID, setTokenID_Context } = useContext(SmartContractContext);\nlet { user_balance, setBalance_Context } = useContext(SmartContractContext);\nlet { user_metadata, setMetadata_Context } = useContext(SmartContractContext);\nlet { user_avatar_URI, setAvatarURI_Context } = useContext(SmartContractContext);\n\nuseEffect(() => {\n  Aos.init({ duration: 2000 });\n}, []);\n\n\nvar open_comic_button = document.getElementById('openComicButton');\n\nvar background = document.getElementById('backgroundImage');\n\nvar element_1 = document.getElementById('element_1');\nvar element_2 = document.getElementById('element_2');\nvar element_3 = document.getElementById('element_3');\n\n\n\nonLoad();\n\n\n//--------------------------------------------------------------------------------------------------\n//# Functions\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\n\nfunction pause(time) {\n  const seconds = time/1000;\n  console.log('PAUSE Start: ' + seconds.toString() + ' seconds');\n  return new Promise(resolve => setTimeout(resolve, time));\n};\n\nasync function getDateTimeString() {\n  const date_object = new Date();\n  const date_time_string = date_object.toLocaleString();\n  return(date_time_string);\n};\n\nasync function onLoad() {\n  console.log('\\nGameGUI >>> RUNNING onLoad()');\n  //await connectWallet();\n  //scene_dict = await runContractFunction('Signatures', 'getTask', [1000, 'world: ' + current_world + ', game: ' + current_game]);\n  //await updatePlayerLedger(\"none\");\n  //console.log(\"Scene Dict:\", scene_dict);\n  // if (mobile_device || vertical_display) {\n  //   //rotate_game = true;\n  //   document.getElementById('playerGameInterfaceImage').style.opacity = '1';\n  //   document.getElementById('playerGameInterfaceContainer').style.top = '100%';\n  // };\n};\n\nasync function loadGame() {\n  console.log('\\nGameGUI >>> RUNNING loadGame()');\n  if (!game_loaded) {\n    user_wallet_info = await connectWallet(network_name);\n    await updatePlayerLedger(\"none\");\n\n    var transaction_info = await runContractFunction('Signatures', 'getTask', [1008, 'world: ' + current_world + ', game: ' + current_game]);\n    scene_dict = await getJSONfromIPFS(transaction_info[0]);\n    console.log(\"Scene Dict:\", scene_dict);\n\n    game_loaded = true;\n    open_comic_button = document.getElementById('openComicButton');\n    open_comic_button.style.display = 'none';\n    await changeScene(1);\n  };\n};\n\n\n// async function handleButtonClick(event) {\n//   const button_ID = event.target.id.split('gameSceneCursorImage')[1];\n//   console.log('Button ID:', button_ID);\n//   await changeScene();\n//   if (button_ID === '4') {\n//     await changeScene();\n//   }\n// };\n\nasync function handleElementClick(event) {\n  const element_ID = event.target.id.split('element_')[1];\n  await updatePlayerLedger(element_ID);\n  const new_scene_number = scene_dict['scenes'][current_scene.toString()]['elements'][element_ID.toString()]['linked_scene']\n  await changeScene(new_scene_number);\n};\n\n\nasync function updatePlayerLedger(world=\"\", game=\"\", scene=0, element_ID, time) {\n  console.log('\\nGameGUI >>> RUNNING updatePlayerLedger()');\n  if (!world) {\n    world = current_world;\n  };\n  if (!game) {\n    game = current_game;\n  };\n  if (!scene) {\n    scene = current_scene;\n  };\n  if (!time) {\n    current_time = getDateTimeString();\n    time = current_time;\n  };\n  const new_ledger_entry = {\"world\": world,\n                            \"game\": game,\n                            \"scene\": scene,\n                            \"element\": element_ID,\n                            \"time\": time};\n  player_leder.push(new_ledger_entry);\n  return(new_ledger_entry);\n};\n\n\nasync function updateElementCoordinates(element, coordinates) {\n  console.log('\\nGameGUI >>> RUNNING updateElementCoordinates()');\n  console.log('Coordinates Input: ', coordinates);\n  element.style.left = coordinates[0].toString() + '%';\n  element.style.bottom = coordinates[1].toString() + '%';\n};\n\n\nasync function changeScene(new_scene_number = false) {\n  console.log('\\nGameGUI >>> RUNNING changeScene()');\n  console.log('Scene # Input:', new_scene_number);\n  if (!new_scene_number && new_scene_number !== 0) {\n    new_scene_number = current_scene += 1;\n  };\n  \n  current_scene = new_scene_number;\n  console.log('New current_scene #:', current_scene);\n  \n\n  background_image = scene_dict['scenes'][current_scene.toString()]['background'];\n  background = document.getElementById('backgroundImage');\n  console.log(background);\n  background.src = background_image;\n  console.log('New Background:', background_image);\n\n  element_1 = document.getElementById('element_1');\n  if (scene_dict['scenes'][current_scene.toString()]['elements']['1']) {\n    element_1_image = scene_dict['scenes'][current_scene.toString()]['elements']['1']['uri'];\n    element_1.src = element_1_image;\n    element_1.style.display = 'inline';\n    element_1_coordinates = scene_dict['scenes'][current_scene.toString()]['elements']['1']['coordinates']\n    await updateElementCoordinates(element_1, element_1_coordinates);\n  } else {\n    element_1.style.display = 'none';\n  };\n\n  element_2 = document.getElementById('element_2');\n  if (scene_dict['scenes'][current_scene.toString()]['elements']['2']) {\n    element_2_image = scene_dict['scenes'][current_scene.toString()]['elements']['2']['uri'];\n    element_2.src = element_2_image;\n    element_2.style.display = 'inline';\n    element_2_coordinates = scene_dict['scenes'][current_scene.toString()]['elements']['2']['coordinates']\n    await updateElementCoordinates(element_2, element_2_coordinates);\n  } else {\n    element_2.style.display = 'none';\n  };\n  \n  element_3 = document.getElementById('element_3');\n  if (scene_dict['scenes'][current_scene.toString()]['elements']['3']) {\n    element_3_image = scene_dict['scenes'][current_scene.toString()]['elements']['3']['uri'];\n    element_3.src = element_3_image;\n    element_3.style.display = 'inline';\n    element_3_coordinates = scene_dict['scenes'][current_scene.toString()]['elements']['3']['coordinates']\n    await updateElementCoordinates(element_3, element_3_coordinates);\n  } else {\n    element_3.style.display = 'none';\n  };\n\n  // // EXP\n  // var EXP_gain = 0;\n  // if (scene_dict['scenes'][current_scene.toString()]['exp']) {\n  //   EXP_gain = scene_dict['scenes'][current_scene.toString()]['exp'];\n  // };\n\n  // // TAP\n  // var TAP_gain = 0;\n  // if (scene_dict['scenes'][current_scene.toString()]['tap']) {\n  //   TAP_gain = scene_dict['scenes'][current_scene.toString()]['tap'];\n  // };\n  \n\n  // if (new_scene_number >= 0) {\n  //   if (EXP_gain) {\n  //     gainEXP(EXP_gain);\n  //     await pause(2000);\n  //   };\n  //   if (TAP_gain) {\n  //     gainTAP(TAP_gain);\n  //     await pause(2000);\n  //   };\n  // };\n\n  // Save to local storage for pre-account\n  // sessionStorage.setItem(current_scene.toString(), 'EXP: ' + EXP_gain.toString() + ', TAP: ' + TAP_gain.toString());\n\n\n};\n\n\n// async function changeScene(new_scene_number = false) {\n//   console.log('Scene # Input:', new_scene_number);\n//   if (!new_scene_number && new_scene_number !== 0) {\n//     new_scene_number = current_scene += 1;\n//   };\n  \n  \n//   current_scene = new_scene_number;\n//   console.log('Scene Changed to:', current_scene);\n  \n\n//   background_image = scene_dict['scenes'][current_scene.toString()]['background'];\n//   console.log('Background:', background_image);\n\n//   const button_1 = document.getElementById('gameSceneCursorImage1');\n//   const button_2 = document.getElementById('gameSceneCursorImage2');\n//   const button_3 = document.getElementById('gameSceneCursorImage3');\n//   const button_4 = document.getElementById('gameSceneCursorImage4');\n//   const button_5 = document.getElementById('gameSceneCursorImage5');\n  \n//   // Button 1\n//   if (scene_dict['scenes'][current_scene.toString()]['button_1'] === 'next') {\n//     button_cursor_1 = cursor_image_Next;\n//   } else if (scene_dict['scenes'][current_scene.toString()]['button_1'] === 'large' || scene_dict['scenes'][current_scene.toString()]['button_1'] === 'grey') {\n//     button_cursor_1 = cursor_image_Large;\n//   } else {\n//     button_cursor_1 = '';\n//   };\n//   if (button_1) {\n//     if (scene_dict['scenes'][current_scene.toString()]['button_1'] === 'grey') {\n//       button_1.style.filter = 'brightness(35%)';\n//     } else {\n//       button_1.style.filter = 'brightness(100%)';\n//     }\n//   }\n\n\n//   // Button 2\n//   if (scene_dict['scenes'][current_scene.toString()]['button_2'] === 'large'|| scene_dict['scenes'][current_scene.toString()]['button_2'] === 'grey') {\n//     button_cursor_2 = cursor_image_Large;\n//     if (scene_dict['scenes'][current_scene.toString()]['button_2'] === 'grey') {\n//       button_2.style.filter = 'brightness(35%)';\n//     } else {\n//       button_2.style.filter = 'brightness(100%)';\n//     };\n//   } else {\n//     button_cursor_2 = '';\n//   };\n  \n\n//   // Button 3\n//   if (scene_dict['scenes'][current_scene.toString()]['button_3'] === 'large') {\n//     button_cursor_3 = cursor_image_Large;\n//   } else {\n//     button_cursor_3 = '';\n//   }\n\n\n//   // Wallet Button\n//   if (scene_dict['scenes'][current_scene.toString()]['wallet_button'] === 'next') {\n//     button_cursor_4 = cursor_image_Next;\n//   } else if (scene_dict['scenes'][current_scene.toString()]['wallet_button'] === 'large') {\n//     button_cursor_4 = cursor_image_Large;\n//   } else {\n//     button_cursor_4 = '';\n//   };\n\n\n//   // Claim Button\n//   if (scene_dict['scenes'][current_scene.toString()]['claim_button'] === 'next') {\n//     button_cursor_5 = cursor_image_Next;\n//   } else if (scene_dict['scenes'][current_scene.toString()]['claim_button'] === 'medium') {\n//     button_cursor_5 = cursor_image_Medium;\n//   } else if (scene_dict['scenes'][current_scene.toString()]['claim_button'] === 'large') {\n//     button_cursor_5 = cursor_image_Large;\n//   } else {\n//     button_cursor_5 = '';\n//   };\n\n\n//   // EXP\n//   var EXP_gain = 0;\n//   if (scene_dict['scenes'][current_scene.toString()]['exp']) {\n//     EXP_gain = scene_dict['scenes'][current_scene.toString()]['exp'];\n//   };\n\n//   // TAP\n//   var TAP_gain = 0;\n//   if (scene_dict['scenes'][current_scene.toString()]['tap']) {\n//     TAP_gain = scene_dict['scenes'][current_scene.toString()]['tap'];\n//   };\n  \n\n//   if (new_scene_number >= 0) {\n//     document.getElementById('backgroundImage').src = background_image;\n//     button_1.style.opacity = '0';\n//     button_2.style.opacity = '0';\n//     button_3.style.opacity = '0';\n//     button_4.style.opacity = '0';\n//     button_5.style.opacity = '0';\n//     button_1.src = button_cursor_1;\n//     button_2.src = button_cursor_2;\n//     button_3.src = button_cursor_3;\n//     button_4.src = button_cursor_4;\n//     button_5.src = button_cursor_5;\n//     if (EXP_gain) {\n//       gainEXP(EXP_gain);\n//       await pause(2000);\n//     };\n//     if (TAP_gain) {\n//       gainTAP(TAP_gain);\n//       await pause(2000);\n//     };\n//   };\n\n//   // Save to local storage for pre-account\n//   sessionStorage.setItem(current_scene.toString(), 'EXP: ' + EXP_gain.toString() + ', TAP: ' + TAP_gain.toString());\n\n\n// };\n\n\nasync function gainEXP(EXP_gain) {\n  if (EXP_gain > 0) {\n    document.getElementById('expAnimation').src = EXP_animation_dict[EXP_gain];\n    await pause(5000);\n    document.getElementById('expAnimation').src = '';\n  };\n};\n\nasync function gainTAP(TAP_gain) {\n  if (TAP_gain > 0) {\n    document.getElementById('expAnimation').src = TAP_animation_dict[TAP_gain];\n    await pause(5000);\n    document.getElementById('expAnimation').src = '';\n  };\n};\n\nasync function saveProgress(event) {\n  console.log(current_scene);\n  if (current_scene === 0) {\n    document.getElementById('saveButton').textContent = 'Save';\n    scene_dict = await getJSONfromIPFS(scene_dict[0]);\n    console.log('Scene:', scene_dict);\n    changeScene(0);\n  } else {\n    let i = 0;\n    let new_progress_array = {};\n    while (i < current_scene) {\n      new_progress_array[i] = sessionStorage.getItem(i.toString());\n    };\n  };\n};\n\n\nfunction handleMouseOver(event) {\n  const element_ID = event.target.id.split('element_')[1];\n  let element = document.getElementById(event.target.id);\n  const current_width = parseFloat(window.getComputedStyle(event.target).width);\n  const current_height = parseFloat(window.getComputedStyle(event.target).height);\n  const new_width = current_width * 1.2;\n  const new_height = current_height * 1.2;\n  event.target.style.width = new_width + 'px';\n  event.target.style.height = new_height + 'px';\n  //element.style.transform = 'scale(1.20)';\n}\n\nfunction handleMouseLeave(event) {\n  const element_ID = event.target.id.split('element_')[1];\n  let element = document.getElementById(event.target.id);\n  const current_width = parseFloat(window.getComputedStyle(event.target).width);\n  const current_height = parseFloat(window.getComputedStyle(event.target).height);\n  const new_width = current_width * 1.0 / 1.2;\n  const new_height = current_height * 1.0 / 1.2;\n  event.target.style.width = new_width + 'px';\n  event.target.style.height = new_height + 'px';\n  //element.style.transform = 'scale(1.0)';\n}\n\n\n\n//--------------------------------------------------------------------------------------------------\n//# HTML\n\nreturn (\n  <div className='gameGUI'>\n    <div className='gameGUIContainer'\n      style={(rotate_game) ? {\n        transform: \"rotate(90deg)\",\n        transformOrigin: \"left right\"} :\n        {}}>\n      <div className='gameSceneContainer' \n        style={(vertical_display) ? {\n          width: \"100vw\",\n          margin: \"0% 0% 0% 0%\"} :\n          {}}>\n        <div className='backgroundContainer'>\n          <img onClick={loadGame} src={background_image} alt='' id='backgroundImage' className='backgroundImage'/>\n        </div>\n        <div className='gameElementContainer'>\n          <img src='' alt='' id='rewardAnimation' className='rewardAnimation'\n            style={{opacity:'0'}}/>\n          <img onClick={handleElementClick} onMouseOver={handleMouseOver} onMouseLeave={handleMouseLeave} src={element_1_image} alt='' id='element_1' className='gameElement'\n            style={{opacity:'1'}}/>\n          <img onClick={handleElementClick} onMouseOver={handleMouseOver} onMouseLeave={handleMouseLeave} src={element_2_image} alt='' id='element_2' className='gameElement'\n            style={{opacity:'1'}}/>\n          <img onClick={handleElementClick} onMouseOver={handleMouseOver} onMouseLeave={handleMouseLeave} src={element_3_image} alt='' id='element_3' className='gameElement'\n            style={{opacity:'1'}}/>\n        </div>\n      </div>\n    </div>\n    <div className='openComicButtonContainer' id='openComicButtonContainer'>\n      <img src={clickToOpen} alt='' onClick={loadGame} id='openComicButton' className='openComicButton'/>\n    </div>\n  </div>\n  )\n}\n//AppEnd\n\nexport default GameGUI","export default __webpack_public_path__ + \"static/media/click_to_open_button.956bad6b.png\";","import React from 'react'\n\nimport Animation from '../../components/animation/Animation'\nimport GameGUI from '../../components/gamegui/GameGUI'\n// import Background from '../../components/background/Background';\n\nimport './comicplay.css'\n\nconst ComicPlay = () => {\n  return (\n    <div className='comicplay'>\n      {/* <Background /> */}\n      <GameGUI />\n      <Animation />\n    </div>\n  )\n}\n\nexport default ComicPlay\n","import React from 'react'\n\nimport melioraComicCover from '../../image/meliora_comic_cover.png'\n\n\n\nimport './mintgui.css'\n\nconst MintGUI = () => {\n\n  function mouseover(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.20)';\n  }\n  \n  function mouseleave(event) {\n    let element = document.getElementById(event.target.id);\n    element.style.transform = 'scale(1.0)';\n  }\n\n  return (\n    <div className='mintgui'>\n      <div className='mintguiLeftContainer'>\n        <div className='mintguiTextContainer'>\n          <div className='mintguiText mintguiTitle' data-aos=\"fade-right\" data-aos-delay=\"100\">Co-founder at NoFun Labs</div>\n          <div className='mintguiText mintguiTagline' data-aos=\"fade-right\" data-aos-delay=\"200\" style={{\n            textDecoration: 'none',\n            color: '#00ef63'}}>- Blockchain Onboarding Solutions -</div>\n          <div className='mintguiText' data-aos=\"fade-right\" data-aos-delay=\"300\" style={{\n            textDecoration: 'none',\n            color: '#bbbbbb'}}>Start onboarding your next 1,000,000 users now:</div>\n          <a data-aos=\"flip-down\" data-aos-delay=\"0\" href='https://evanon.earth/nofunlabs' target=\"_blank\" \n          className='mintguiText mintguiLink' id='nofunlabsLink' onMouseOver={mouseover} onMouseLeave={mouseleave} style={{\n            textDecoration: 'none',\n            color: '#7CE2F9'}}>evanon.earth/nofunlabs -></a>\n          <br></br>\n          <div data-aos=\"fade-right\"  data-aos-delay=\"500\" className='mintguiText mintguiTitle'>Advisor at BrightID</div>\n          <div data-aos=\"fade-right\" data-aos-delay=\"600\" className='mintguiText mintguiTagline' style={{\n            textDecoration: 'none',\n            color: '#ff9500'}}>- Decentralized Identity Protocol -</div>\n          <div data-aos=\"fade-right\" data-aos-delay=\"700\" className='mintguiText' style={{\n            textDecoration: 'none',\n            color: '#bbbbbb'}}>Your identity, your privacy, all in your custody. No \"orb\" required:</div>\n          <a data-aos=\"flip-down\" data-aos-delay=\"0\" href='https://evanon.earth/brightid' target=\"_blank\"\n          className='mintguiText mintguiLink' id='brightidLink' onMouseOver={mouseover} onMouseLeave={mouseleave} style={{\n            textDecoration: 'none',\n            color: '#7CE2F9'}}>evanon.earth/brightid -></a>\n          <br></br>\n          <div data-aos=\"fade-right\" data-aos-delay=\"900\" className='mintguiText mintguiTitle'>Advisor at Unitap</div>\n          <div data-aos=\"fade-right\" data-aos-delay=\"1000\" className='mintguiText mintguiTagline' style={{\n            textDecoration: 'none',\n            color: '#ea49ff'}}>- Universal Token Distribution Platform -</div>\n          <div data-aos=\"fade-right\" data-aos-delay=\"1100\" className='mintguiText' style={{\n            textDecoration: 'none',\n            color: '#bbbbbb'}}>Grow your dapp's userbase with free gas and token raffles:</div>\n          <a data-aos=\"flip-down\" data-aos-delay=\"00\" href='https://evanon.earth/unitap' target=\"_blank\"\n          className='mintguiText mintguiLink' id='unitapLink' onMouseOver={mouseover} onMouseLeave={mouseleave} style={{\n            textDecoration: 'none',\n            color: '#7CE2F9'}}>evanon.earth/unitap -></a>\n        </div>\n      </div>\n      <div className='mintguiRightContainer'>\n        <div className='mintguiRightTop'>\n          <div className='mintguiImageContainer'>\n            <img data-aos=\"fade-left\" src={melioraComicCover} alt='' className='mintguiImage' />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MintGUI\n","import React from 'react'\n\nimport Animation from '../../components/animation/Animation'\nimport MintGUI from '../../components/mintgui/MintGUI'\n// import Background from '../../components/background/Background';\n\nimport './comicmint.css'\n\nconst ComicMint = () => {\n  return (\n    <div className='comicmint'>\n      {/* <Background /> */}\n      <MintGUI />\n      <Animation />\n    </div>\n  )\n}\n\nexport default ComicMint\n","import React, { useState } from 'react';\nimport Navbar from './components/navbar/Navbar';\nimport Background from './components/background/Background';\nimport Main from './pages/main/Main';\nimport Footer from './components/footer/Footer';\nimport ComicPlay from './pages/comicplay/ComicPlay';\nimport ComicMint from './pages/comicmint/ComicMint';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\n\nimport SmartContractContext from './scripts/SmartContractContext';\n\n\nconst App = () => {\n     let [user_address, setAddress_Context] = useState(null);\n     let [user_token_ID, setTokenID_Context] = useState(null);\n     let [user_balance, setBalance_Context] = useState(null);\n     let [user_metadata, setMetadata_Context] = useState(null);\n     let [user_avatar_URI, setAvatarURI_Context] = useState(null);\n     return (\n          <SmartContractContext.Provider value={{ user_address, setAddress_Context,\n                                                  user_balance, setBalance_Context,\n                                                  user_token_ID, setTokenID_Context,\n                                                  user_metadata, setMetadata_Context,\n                                                  user_avatar_URI, setAvatarURI_Context }}>\n               <BrowserRouter>\n                    <Background />\n                    <Navbar />\n                    <Routes>\n                         <Route exact path=\"/\" element={<Main />} />\n                         <Route exact path=\"/comics/meliora/volume1/play\" element={<ComicPlay />} />\n                         <Route exact path=\"/comics/meliora/volume1/mint\" element={<ComicMint />} />\n                    </Routes>\n                    <Footer />\n               </BrowserRouter>\n          </SmartContractContext.Provider>\n     )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n     <React.StrictMode>\n          <App />\n     </React.StrictMode>,\n     document.getElementById('root')\n)\n"],"sourceRoot":""}